name,ring,quadrant,isNew,description
.NET Framework,Trial,languages-and-frameworks,FALSE,".NET Frameworkは、Windows向けのソフトウェアを開発するためのマイクロソフトのプラットフォーム。一般的にはデスクトップ、Webアプリケーション、ゲーム、移動体通信など多様なアプリケーションの開発に利用されます。

プロジェクトでの利用状況
Windows ActiveDirecoryサーバとの通信用に利用しています。"
@slack/bolt,Adopt,languages-and-frameworks,TRUE,"@slack/boltは、Slack Appの開発を助けるJavaScriptフレームワークです。手軽なAPIインターフェースを提供し、メッセージ応答やイベントリッスニングなどを容易に実装します。ユースケースとしては、Slackボットの作成やワークフローオートメーションがあります。

プロジェクトでの利用状況
Slackアプリを作るときのフレームワークとして利用しています。"
AdobeXD,Adopt,Tools,FALSE,"Adobe XDはユーザーインターフェースとユーザーエクスペリエンスデザインツールです。ウェブサイトやモバイルアプリのプロトタイプ作成、ワイヤーフレーミング、アニメーション作成などのタスクに広く使われています。

プロジェクトでの利用状況
フロントの画面設計で利用しています。"
Amplify Flutter,Adopt,languages-and-frameworks,TRUE,"Amplify FlutterはAWSが提供するアプリ開発フレームワーク。Flutterで開発したクロスプラットフォームアプリに対し、クラウドサービスをギクシャクせずに組み込むことが可能です。主に認証、データストレージ、APIの利用、AI／ML機能などが利用可能。

プロジェクトでの利用状況
バックエンドにAWS Amplifyを利用しているので、フロントエンドも併せて利用しています。"
Android Studio,,Tools,FALSE,Android Studioは、Googleが開発したAndroid向けの統合開発環境(IDE)です。コード編集、デバッグ、パフォーマンス測定ツールなどが一体化されており、アプリの生産性を高めます。主な使用例はAndroidアプリの開発です。
Anthos,Trial,Platforms,TRUE,Anthosは、Google Cloudが提供するモダンなアプリケーション開発・運用プラットフォームです。ハイブリッドとマルチクラウド環境でのサービス統合・管理を可能にし、一貫性のある開発体験を提供します。ユースケースには、クラウド移行、マルチクラウド管理、継続的なデリバリーなどがあります。
anycommu,Adopt,Tools,TRUE,"Anycommuは、インターネット上でコミュニティベースの交流が行えるプラットフォームです。一般的には、特定のトピックや興味を共有する人々が情報や意見を交換し、ディスカッションを行うために使用されます。

プロジェクトでの利用状況
ふりかえりの時にボードとして利用しています。"
Apollo Client,Adopt,languages-and-frameworks,TRUE,Apollo ClientはGraphQLのクライアントライブラリで、データのフェッチやキャッシング、状態管理などを容易に実装します。主にReactやAngularなどのフレームワークと組み合わせて使用されます。
AppSheet,Adopt,languages-and-frameworks,TRUE,"AppSheetは、スプレッドシートデータを使用してアプリケーションを作成することができるノーコードプラットフォームです。一般的なユースケーズとしては、ビジネスユーザーがカスタムモバイルアプリを迅速に建設・デプロイしたい場合や、ITリソースの不足を補うために使用されます。

プロジェクトでの利用状況
フロントとして利用しています"
ArgoCD,Trial,Platforms,TRUE,ArgoCDは、Kubernetes用の宣言的なGitOps継続デプロイツールです。アプリケーションの目標状態がGitリポジトリに格納されており、ArgoCDはクラスタ状態を目標状態に自動合致させます。主なユースケースは、アプリケーションの自動デプロイと更新です。
ArgoCD,Adopt,Tools,FALSE,"プロジェクトでの利用状況
本番環境、テスト環境のK8sリソースの状況確認に利用しています。ArgoCDには、podの状態管理に関する機能もありますが、それらは利用していません。"
ArtifactRegistry,Adopt,Platforms,FALSE,ArtifactRegistryはGoogle Cloudのパッケージ管理サービスで、ソフトウェアアーティファクトのバージョン管理と配布を容易にします。ユースケースは、コードのビルドやデプロイに必要な依存関係の管理、バイナリアーティファクトのセキュアな保存などです。
astah,Trial,Tools,FALSE,"Astahは設計や要件定義に役立つUML（統一モデリング言語）モデリングツールです。シーケンス図やクラス図などを作成し、直感的にソフトウェアの構造を理解・共有したり、設計ミスを防ぐなどのユースケースがあります。

プロジェクトでの利用状況
設計用モデリングツールとして利用しています。設計の一部をUMLで作成するために一部メンバーで利用中です。ライセンス購入の必要があるため正式導入の目処は立っていません。"
Auth0,Adopt,Platforms,FALSE,"Auth0は認証と認可を管理するためのフレキシブルで簡単なプラットフォーム。ユーザー認証、社会的なログイン、パスワードリセット、マルチファクタ認証など数々の機能を提供し、自社のアプリやウェブサイトでセキュリティを確保します。

プロジェクトでの利用状況
Webアプリの認証プラットフォームとして利用しています。"
AWS Amplify,Adopt,Platforms,FALSE,"AWS Amplifyは、ウェブ＆モバイルアプリケーションを迅速に構築するための開発プラットフォームです。認証、API、ストレージ、解析等の機能を提供し、サーバレスアプリケーションの開発・デプロイを効率化します。

プロジェクトでの利用状況
AWSでモバイルアプリのバックエンドを作成向けのサービス＆ライブラリ＆ツールセットです。"
AWS API Gateway,Adopt,Platforms,FALSE,"AWS API GatewayはAWSの完全に管理されたサービスで、APIの作成、配布、メンテナンス、セキュリティ、モニタリングを簡単にするためのものです。主にサーバーレスアプリケーションやモバイルバックエンドの開発を支援します。

プロジェクトでの利用状況
API のゲートウェイサーバー（設計方針としてAPI Gatewayパターンを採用しています）です。APIの認証機能はLambdaオーサライザーを利用しています。"
AWS AppSync,Adopt,Platforms,FALSE,"AWS AppSyncは、データ駆動型のWeb・モバイルアプリケーション開発を支援するマネージドサービスです。主なユースケースはAPIの作成・実行、リアルタイムデータ同期、オフラインアプリケーションのデータアクセスなどです。

プロジェクトでの利用状況
アプリで発生したデータをバックエンドに送信したり、バックエンドからアプリにデータを配信するためのWeb APIとして利用しています。"
AWS Athena,Adopt,Platforms,FALSE,"AWS Athenaは、S3に保存されたデータに対して、SQLクエリを使ってインタラクティブな分析を行うサービスです。サーバレスで、設定不要で利用可能。大量のログ分析やデータレイク分析によく使用されます。

プロジェクトでの利用状況
分析基盤で利用しています。"
AWS Aurora / RDS,Adopt,Platforms,FALSE,"Amazon Auroraは、Amazon Web Servicesが提供するリレーショナルデータベースサービスで、高いパフォーマンスと可用性を提供します。一般的なユースケースは、大規模な企業向けデータベースシステムです。
AWS RDSは、Amazon Web Servicesのリレーショナルデータベースサービスで、データベースの設置、運用、スケーリングの手間を省くことができます。一般的には、現行のアプリケーションへのデータベースよるデータ管理や、Webアプリケーションのバックエンドとして使われます。

プロジェクトでの利用状況
実行環境のデータストアとして使用しています。PostfreSQLの利用が多いようです。"
AWS RdsProxy,Adopt,Platforms,TRUE,"AWS RDS Proxyは、アプリケーションとデータベース間の接続を管理・最適化するサービス。接続の再利用、フェールオーバーの自動化、コネクション数のスケーリングなどを行う。多量のトラフィックを扱うアプリやマイクロサービスに適用される。

プロジェクトでの利用状況
Lambda から RDS に接続するときに利用しています。"
AWS CloudFormation,Adopt,Platforms,FALSE,AWS CloudFormationは、AWSリソースをモデル化し管理するサービスです。JSONまたはYAML形式のテンプレートで設定を記述し、アプリケーションに必要なリソースを一括で作成・管理できます。一般的には、一貫性を保つためのインフラストラクチャの自動化や、デプロイメントの管理に利用されます。
AWS CloudFront,Adopt,Platforms,FALSE,"AWS CloudFrontは、Amazonのコンテンツ配信ネットワーク（CDN）サービス。Webコンテンツや配信を高速化するためのデータ、ビデオ、アプリケーション等を近くのエッジロケーションから効率的に配信します。ユースケースには、Webサイトの応答時間の短縮、ビデオストリーミング、ソフトウェア配布などがあります。

プロジェクトでの利用状況
独自ドメインのエンドポイントとして利用しています。"
AWS CloudWatch,Adopt,Platforms,FALSE,"Amazon CloudWatchは、AWSリソースやアプリケーションの監視と管理を行うサービスです。ログの集約、トラッキング、分析などの一般的ユースケースに使われ、異常検知やシステムのパフォーマンス最適化を助けます。

プロジェクトでの利用状況
ログ収集／格納先に利用しています。例えば AWS AppSync や AWS Lambda から利用されています。"
AWS Cognito,Adopt,Platforms,FALSE,"Amazon Cognitoは、アプリケーションへのユーザー認証とデータ同期の機能を提供するAWSのサービス。ユーザー登録、ログイン、アクセス制御など手間のかかる認証プロセスを簡易化して、アプリケーションのセキュリティを強化します。

プロジェクトでの利用状況
アプリのユーザー認証で利用しています。OIDCを使ったソーシャルログインや、ユーザーの社員認証基盤と連携して運用管理システムの認証基盤として利用しています。"
AWS DynamoDB,Adopt,Platforms,FALSE,"Amazon DynamoDBは、パフォーマンスとスケーラビリティを最適化するためのフルマネージド型NoSQLデータベースサービス。一般的に、高負荷なWebアプリケーション、ゲーム、IoTデバイス、モバイルアプリなど、読み書きが頻繁に行われる場面で使用します。

プロジェクトでの利用状況
アプリで発生したデータの保存先＆同期先、または簡易的なKVSとして利用しています。コストを低く抑えるために最適な場合に利用することが多いです。"
AWS EC2,Adopt,Platforms,FALSE,"AWS EC2は、Amazon Web Servicesのクラウドコンピューティングプラットフォームで、仮想プライベートサーバーを提供します。一般的には、アプリケーションホスティングやアプリのバックエンドとして使用されます。

プロジェクトでの利用状況
K8sの実行環境、CI/CD(ビルド/デプロイ)サーバー、DBサーバー、PgAdmin4やGHE Actions Runnerホストなど、アプリケーションサーバーなど多岐の利用にわたります。"
AWS Elastic Beanstalk (.NET windows),Trial,Platforms,TRUE,"AWS Elastic Beanstalkは、.NETアプリケーションのデプロイとスケーリングを自動化するプラットフォームです。一般的なユースケースはウェブアプリやAPIバックエンドの運用に使います。Windows環境をサポートしています。

プロジェクトでの利用状況
Webアプリの実行環境として利用しています。"
AWS Elastic Beanstalk (node),Adopt,Platforms,TRUE,"AWS Elastic Beanstalkは、Node.jsアプリケーションのデプロイ・運用を簡素化するクラウドサービス。コードのアップロードだけで、自動的に環境が設定・管理・スケーリングされます。ユースケースとしては、API、webアプリ開発等があります。

プロジェクトでの利用状況
Webアプリの実行環境として利用しています。"
AWS ElastiCache,Adopt,Platforms,FALSE,"AWS ElastiCacheは、ウェブアプリケーションの速度とスループットを向上させるためのインメモリデータストアおよびキャッシュサービスです。一般的なユースケースとしては、高負荷対策、セッションストア、リーダーボード、スパイクトラフィックのコスト削減等に使用されます。

プロジェクトでの利用状況
DBやアプリケーションデータのキャッシュサーバーとして利用しています。エンジンはRedisが多いようです。"
AWS EventBridge,Adopt,Platforms,FALSE,"AWS EventBridgeはサーバレスイベントブローカーサービスで、システム間のデータ連携を更にシームレスにする。アプリケーション、AWSサービス、サードパーティのSaaSやデータソースとのイベントドリブン連携を実現。

プロジェクトでの利用状況
定期バッチ実行のスケジューラとして利用しています。"
AWS Glue,Adopt,Platforms,FALSE,"AWS Glueはフルマネージド型のETL(Extract, Transform, Load)サービスで、データの解析と移行を容易にします。ユースケースは、データウェアハウスへのデータ移行、ログ解析、機械学習のためのデータ準備などがあります。

プロジェクトでの利用状況
分析基盤で利用しています。"
AWS Lambda,Adopt,Platforms,FALSE,"AWS Lambdaはサーバーレスコンピューティングサービスで、コードを実行し、自動的に基盤を調整・管理します。一般的な使用例は、ウェブアプリケーション、データ変換、リアルタイムファイル処理、運用タスク自動化などです。

プロジェクトでの利用状況
認証処理やバックエンドでのアプリケーション実行環境として利用しています。Node.jsやPythonでの利用実績があります。"
AWS Lambda Layers,Adopt,Platforms,TRUE,"AWS Lambda Layersは、コードの共有と分離を可能にするAWSサービス。一部のライブラリ/カスタムランタイムをレイヤに格納し、複数のラムダ関数で利用が可能。管理と更新が容易で、コードの重複を避けるために一般的に使用されます。

プロジェクトでの利用状況
npm modules をレイヤーとして複数Lambdaで共通的に利用しています。"
AWS Lambda@Edge,Adopt,Platforms,TRUE,"AWS Lambda@Edgeは、AWSが提供するサービスで、CloudFrontのエッジロケーションでコードを実行できる機能です。一般的なユースケースとしては、リクエストやレスポンスに対するカスタム化、ABテストなどがあります。

プロジェクトでの利用状況
CloudFront に対するエッジ処理を追加するのに利用しています。"
AWS Neptune,Adopt,Platforms,TRUE,"AWS Neptuneは、高速で信頼性の高いグラフデータベースサービスです。一般的に、ネットワーク、ソーシャル分析、リアルタイムの大規模アプリケーションなどの複雑なリレーショナルクエリに使用されます。

プロジェクトでの利用状況
グラフDBとして利用しています。移動手段のルート検索をグラフDBによって複雑な検索が可能になります。クエリ言語としてgremlinを利用しています。"
AWS Notebook,Adopt,Platforms,TRUE,"AWS NotebookはAmazonのクラウド上でJupyter Notebookを実行できるサービス。データ分析、機械学習モデルの訓練や検証等をコード、テキスト、視覚化を交えて記述・実行できる。一般的にはデータサイエンスのタスクに用いられる。

プロジェクトでの利用状況
Neptune DB GUIツールとして利用しています。"
AWS Route53,Adopt,Platforms,FALSE,AWS Route53はAmazonのクラウドDNSウェブサービスで、情報のルーティングを管理し、ドメイン名登録を行います。一般に、WebサイトやWebアプリケーションのスケーラブルで高可用性なルーティングを提供するために使用されます。
AWS S3,Adopt,Platforms,FALSE,"Amazon S3は、Amazonの提供するインターネットストレージサービスです。データのバックアップ、ウェブサイトのホスティング、モバイルアプリケーション、アーカイブなど、大量のデータを安全に保存・取得する用途に広く利用されます。

プロジェクトでの利用状況
実行環境のデータストア、ファイルサーバー、Webホスティング、一時URLを発行したダウンロードファイルサーバーなど、多岐にわたって利用されています。"
AWS SecretManager,Adopt,Platforms,FALSE,"AWS Secret Managerは、AWSが提供するシークレット管理サービスです。データベース認証情報やAPIキーなどの機密情報を安全に保存・管理できます。一般的には、システム内部で利用する機密情報のセキュアな管理・配布、ローテーションに使用されます。

プロジェクトでの利用状況
アプリケーション秘匿情報の格納先として利用しています。"
AWS SES,Adopt,Platforms,FALSE,"AWS SES（Amazon Simple Email Service）は、送信/受信メール処理を容易に行うためのクラウドベースのサービス。一般的に、高容量のメール送信タスク、通知、トランザクションメールの配信などに使われます。

プロジェクトでの利用状況
メール送信で利用しています。"
AWS SNS,Adopt,Platforms,FALSE,"AWS SNS (Simple Notification Service)は、Amazonのマイクロサービスプッシュ通知サービスです。大量のメッセージを即座に送信することで、システム間通信やユーザー通知を可能にします。一般的には、システムステータスの更新通知、アプリへのプッシュ通知、メール通知などに使われます。

プロジェクトでの利用状況
イベント通知などで利用しています。"
AWS SQS,Adopt,Platforms,FALSE,"AWS SQS（Simple Queue Service）はAmazon Web Servicesのメッセージキューイングサービスで、大量のメッセージに対する信頼性のあるスケーリング可能な管理を提供し、マイクロサービス、分散システム、サーバーレスアプリケーション間でメッセージを取り扱う場合に使用されます。

プロジェクトでの利用状況
非同期処理や、FIFOによる順序制御実行で利用しています。"
AWS SSM,Adopt,Platforms,FALSE,"AWS SSM（Systems Manager）は、AWSリソースの視覚化、監視、および操作を簡単に行える管理サービスです。主なユースケースは、インフラストラクチャ管理、パッチ適用、設定管理、および運用の自動化です。

プロジェクトでの利用状況
環境定義の格納先として利用しています。"
AWS StepFunctions,Adopt,Platforms,FALSE,"AWS Step Functionsは、マイクロサービスの調整と複雑なワークフローを視覚化・制御するサービスです。データ変換、ETLジョブ、レポート生成などの長時間実行タスクを簡単に管理します。

プロジェクトでの利用状況
フローエンジンやバッチ処理で利用しています。具体的に利用している機能は以下のとおりです。
- 繰り返しフロー
- Mapによる分散実行
- SQS連携によるポーリング実行
- CSV/Mapによる大量入力データを処理するバッチ"
AWS Transfer Family,Adopt,Platforms,TRUE,"AWS Transfer FamilyはAmazon Web Servicesの完全管理型ファイル転送サービスで、SFTP、FTP、FTPSを通じてデータ転送が可能です。一般的には、データをセキュアにクラウドストレージに移行し、シェアするシナリオで使用します。

プロジェクトでの利用状況
SFTP, AS2 で転送データを集配信するポイントで利用しています。"
AWS WAF,Adopt,Platforms,FALSE,AWS WAFは、Webアプリケーションファイアウォールサービスで、Webアプリケーションを一般的なWeb攻撃から保護します。ユースケースは、不正なリクエストのブロックやサイトへの攻撃防止など。
AWS X-RAY,Adopt,Platforms,TRUE,AWS X-Rayは、AWSで動作するアプリケーションのパフォーマンスボトルネックや障害原因の診断を支援する分析ツールです。一般的には、マイクロサービスアーキテクチャやサーバーレスアプリケーションのパフォーマンス監視やデバッグに使用されます。
awspublish,Adopt,languages-and-frameworks,FALSE,"awspublishは、Amazon S3へのファイルのストリーミングアップロードを行うためのNode.jsライブラリです。一般的には、webサイトやアプリのコンテンツをAWSにデプロイするために使用されます。

プロジェクトでの利用状況
CloudFront / S3 でコンテンツを配信するときに差分管理が実行され、デプロイ時に差分のキャッシュクリアをしてくれるライブラリです。"
Microsoft Azure Active Directory B2C,Adopt,Platforms,TRUE,Azure Active Directory B2Cは、ユーザー認証とID管理サービスです。外部顧客が自身のパスワードやプロファイルを管理しながら、ビジネスシステムに安全にアクセスできるようにします。Eコマース、モバイルアプリなどでよく使用されます。
Microsoft Azure Automation アカウント,Hold,Platforms,TRUE,"Azure Automation アカウントは、Azure サービスを自動化・管理するための Azure サービスです。一般的なユースケースは、定期的なメンテナンスタスクの自動化、設定管理、エラーのトラブルシューティングなどです。

プロジェクトでの利用状況
アプリから Microsoft Entra ID を更新する際に、GraphAPIで未対応の処理を行うために利用しています。"
Microsoft Azure Blob Storage,Adopt,Platforms,TRUE,"Azure Blob Storageは、Microsoftのクラウドストレージソリューションで、大量の非構造化データ（ドキュメント、写真、音声、ビデオなど）を送信、保存、プロセッシングするのに最適です。一般的には、バックアップ、ブログコンテンツ、メディアストリーミング、データ分析で使用されます。

プロジェクトでの利用状況
アプリのログ出力先や取り込みファイルの置き場として利用しています。"
Microsoft Azure Cognitive Search,Adopt,Platforms,TRUE,"Azure Cognitive Searchは、MicrosoftのAI服務で、アプリ内の検索経験を作成・デプロイするためのクラウドベースサービスです。一般的には、ウェブサイトやアプリに高度な検索機能を追加する際に利用します。

プロジェクトでの利用状況
社外秘などの独自データをインデックスに蓄積し、クエリで検索するために利用しています。"
Microsoft Azure Container Apps,Adopt,Platforms,TRUE,"Azure Container Appsは、マイクロサービスやイベントドリブンアプリケーションの構築と展開を簡易化するマネージドサービスです。スケーリング、ローリングアップデート、セキュリティなどの障壁を取り除き、開発者がコードに集中できるようにします。

プロジェクトでの利用状況
フロントエンド、バックエンドともにAzure上のデプロイ環境として利用しています。"
Microsoft Azure Container Registry,Adopt,Platforms,TRUE,Azure Container Registryは、プライベートなDockerコンテナイメージを保管、管理、展開するためのAzureのサービスです。開発チームはDockerコマンドでイメージを大量にプッシュ、プルし、またコンテナ化されたアプリケーションをAzureのサービスに展開できます。
Microsoft Azure Cosmos DB,Adopt,Platforms,TRUE,"Azure Cosmos DBは、Microsoftのプロプリエタリな、グローバルに分散された、マルチモデルのデータベースサービスです。一般的なユースケースには、IoT、ゲーミング、リテール、およびテレメトリが含まれます。

プロジェクトでの利用状況
アプリ（チャット）の履歴を保存、管理するために利用しています。"
Microsoft Azure DevOps,Adopt,Platforms,TRUE,"Azure DevOpsは、コードの共有、作業の追跡、ソフトウェアの配信を支援するMicrosoftの開発者ツール群です。プロジェクトマネージメント、CI/CDパイプラインの自動化、テスト管理などの機能があります。

【ユースケース】Boardsでタスク管理・リリース管理、Reposでソースコード管理、Artifactsでソースコードのパッケージ管理、PipelinesでCI/CDを行っている。TestPlansも使っているみたいだが、詳細は不明。顧客の社内基盤がMicrosoft/Azureの場合に利用"
Microsoft Azure Front Door,Adopt,Platforms,TRUE,Azure Front Doorは、Microsoftのスケーラブルでセキュアなエントリポイントを提供するグローバルCDNソリューションです。ユースケースには、Webサイトのパフォーマンス向上、ダウンタイム軽減、クラウドフロントセキュリティ強化があります。
Microsoft Azure Functions,Adopt,Platforms,TRUE,"Azure Functionsは、イベント駆動型のサーバーレスコンピューティングサービスで、開発者がイベントに基づくコードが必要なケースで使用されます。大規模なデータの処理、タイマーに基づく処理、Webリクエストへの対応などに利用できます。

プロジェクトでの利用状況
非同期処理や、Azure Blobへのイベントを検知し、バックエンドのアプリを起動するために利用しています。"
Microsoft Azure OpenAI ServiceMicrosoft ,Adopt,Platforms,TRUE,"Azure OpenAI Serviceは、Microsoft Azureクラウド上でOpenAIのチャットモデルをホストして提供するサービスです。一般的なユースケースとしては、天気予報やニュース配信、チャットボット、コンテンツ作成等の自然言語処理に利用されます。

プロジェクトでの利用状況
社外秘などの独自データをもとに回答を得るために利用しています。"
Microsoft Azure SQLDatabase,Adopt,Platforms,TRUE,Azure SQL Databaseは、Microsoftが提供するフルマネージドクラウドデータベースサービスで、エンタープライズレベルのSQL Serverエンジンの機能を提供します。一般的には、アプリケーション開発、テスト、運用などに使用され、スケーラビリティ、高可用性、セキュリティを確保することが可能です。
Microsoft Azure WebApps,Adopt,Platforms,TRUE,Azure WebAppsは、MicrosoftのクラウドプラットフォームAzure上でウェブアプリケーションやAPIを作成、デプロイ、管理するためのサービスです。一般的には、拡張性と安定性を必要とするエンタープライズウェブアプリケーションの開発と運用に使用されます。
BackLog,Adopt,Tools,FALSE,"Backlogはプロジェクト管理とバグ追跡を一元的に行えるツールです。開発チームがタスクを管理し、進行状況を追跡、共有できます。

プロジェクトでの利用状況
タスクやチケットの管理で使用しています。"
Backstage,Adopt,Tools,FALSE,"BackstageはSpotifyが開発したオープンソースの開発者ポータルで、各プロジェクトを一つの場所で管理できます。一般的に複数のサービスやツールを統合し、開発者が業務を効率化するために使用されます。

プロジェクトでの利用状況
K8sのpodのデプロイ、GUIを利用したロールバックや、リリースの承認フローと権限の制御に使用しています。"
BigQuery,Apopt,Platforms,FALSE,"BigQueryはGoogleのクラウドベースのエンタープライズデータウェアハウスです。ビッグデータ分析を行う際にデータを高速にフェッチして分析できます。一般のユースケースは、大規模データセットのエンドツーエンド分析。

プロジェクトでの利用状況
分析やiOSアプリの操作ログをGASで出力するために使用しています。"
bootstrap,Adopt,languages-and-frameworks,FALSE,"Bootstrapは、Web開発のための無料のフロントエンドフレームワークで、独自のHTML、CSS、JSコードを使ってレスポンシブなデザインを簡単に作成できます。一般的には、効率的なWebページやアプリケーションのデザイン・構築に使用されます。

プロジェクトでの利用状況
フロントエンドのデザインに使用しています。"
Bundler,Assess,Tools,FALSE,Bundlerは、Rubyの依存性管理ツールです。プロジェクトで利用するgem（Rubyのライブラリ）とそのバージョンを指定、管理し、開発者間での環境統一やデプロイを円滑に行うために使われます。
C#,Adopt,languages-and-frameworks,FALSE,"C#はマイクロソフトが開発したプログラミング言語です。強力な型システム、ガベージコレクション、豊富な標準ライブラリなどを含む特徴があり、一般的にはWindows上で動くアプリケーションやゲーム（Unityを使用）の開発によく使われます。

プロジェクトでの利用状況
バックエンドの開発やWindows用のデスクトップアプリ・Windows ActiveDirecoryサーバとの通信用に使用しています。"
Cacoo,Adopt,Tools,FALSE,"Cacooはオンラインで利用できる図作成・共有ツールです。ユーザーがリアルタイムでチーム作業を行い、ダイアグラムやフローチャートを作成・編集ができるます。

プロジェクトでの利用状況
アーキテクチャ図や、組織図などのドキュメント管理で使用しています。"
Chatwork,Assess,Tools,FALSE,Chatworkはビジネス用のチャットツールで、チーム内のコミュニケーションとタスク管理を効率化します。添付ファイル共有、グループチャット、個別チャットなどの機能を持ち、リモートワークやプロジェクトの進捗管理に幅広く使われます。
CI/CD,Adopt,Techniques,FALSE,CI/CDは、ソフトウェア開発の最適化手法で、頻繁にコードを集中リポジトリに統合し、自動的にビルドとテストを行うこと（CI）、そして安定したリポジトリから自動的に配信を行うこと（CD）を指します。
Circle CI,Adopt,Platforms,FALSE,CircleCIは、ソフトウェア開発における自動化テストとデプロイを支えるCI/CDツールです。コードの変更を自動的に検出し、コードテストとビルドプロセスを自動実行します。
Drone,Adopt,Platforms,FALSE,DroneはDocker環境向けの軽量なCI/CDサービスで、プルリクエストやコードの変更に基づいて自動的にビルドやテストを実行します。主にマイクロサービスの開発やデプロイに適しています。
clasp,Adopt,Tools,FALSE,ClaspはGoogle Apps Scriptのための開発ツールで、CLIからGoogle Apps Scriptをローカル環境で開発、編集、デプロイすることが可能です。一般的なユースケースは、複雑なGoogle Apps Scriptをローカルで管理したい場合や、バージョン管理を行いたい場合に使用します。
Canary Release,Adopt,Techniques,FALSE,カナリアリリースは新バージョンを全ユーザーに展開する代わりに、初めに一部ユーザーに対して提供するソフトウェア開発手法です。異常がなければ、段階的に提供範囲を広げます。バグの影響を最小化し、高品質なサービス提供を維持します。
CocoaPods,Apopt,Tools,FALSE,CocoaPodsは、iOSアプリケーションの依存関係管理ツールです。スクリプトを使用して、ライブラリやフレームワークをプロジェクトに統合することが可能です。一般的には、SwiftやObjective-Cのプロジェクトで、サードパーティのライブラリを迅速かつ簡単に導入するために使用されます。
Combine PR,Apopt,Tools,TRUE,"Combine PRは、複数のGitHubのプルリクエストを一つに統合するツールです。ソースコードのレビューをより効率的に行う場合や、分割された更新を一度に適用するときなどに用いられます。

プロジェクトでの利用状況
dependabotの複数アップデートをマージして1つのPRにするために使用しています。"
Confluence,Adopt,Tools,TRUE,"ConfluenceはAtlassian社が開発したプロジェクト管理ツール。チームメンバー間で情報共有や議論を行うための知識ベース提供を目的にしています。

プロジェクトでの利用状況
設計書・議事録などの各種ドキュメントの管理、カレンダー、ナレッジ共有のために使用しています。"
Dart,Adopt,languages-and-frameworks,TRUE,"DartはGoogleが開発した汎用的なプログラミング言語で、特にWebやモバイルアプリ開発で使用されます。一般的なユースケースとしては、特にFlutterフレームワークを用いたクロスプラットフォームのアプリ開発が挙げられます。

プロジェクトでの利用状況
Flutterを用いたモバイルアプリ開発で使用しています。"
Datadog,Adopt,Platforms,TRUE,"DataDogは、サーバーやアプリケーションの監視・セキュリティ・分析サービスを提供するプラットフォームです。ユースケースとしては、障害検知、パフォーマンスチューニング、ログ管理、ネットワーク監視などがあります。

プロジェクトでの利用状況
ログ・メトリクス収集、アラートの発報に使用しています。"
Dependabot,Adopt,,TRUE,Dependabotは依存関係管理ツールで、プロジェクトのライブラリが古くなった時に自動で更新通知を送信します。一般的には、セキュリティリスクを低減し、開発者の負担を軽減するために使用されます。
DeployGate,Adopt,Tools,TRUE,DeployGateは、モバイルアプリの開発とデバッグを効率化するためのプラットフォームです。一般的に、開発者はビルドをリアルタイムで配布、デバッグ、アップデートし、ユーザーフィードバックをリアルタイムで収集できます。
detekt,Adopt,Tools,FALSE,"Detektは、Kotlinプログラミング言語用の静的コード解析ツールです。開発者がコードの品質を向上させるために使用し、一般的なユースケースはコードのバグ、コードスメル、複雑性、および冗長性を検出することです。

プロジェクトでの利用状況
CIでdetektを使用しています。"
Discord,Adopt,Tools,FALSE,"Discordは、ゲームプレーヤーや小規模チーム向けのリアルタイムメッセージングアプリ。テキスト、音声、ビデオ通話、共有画面機能があり、コミュニティ作成も可能。ゲーム中のコミュニケーションやリモートチームの協力によく使われます。

プロジェクトでの利用状況
ペアプロや雑談のために使用しています。"
Django,Adopt,languages-and-frameworks,TRUE,DjangoはPythonで書かれた、高度にカスタマイズ可能なオープンソースのウェブフレームワークです。一般的には、複雑なデータベース駆動のWebサイトやAPIを開発するために使用されます。
Docker,Adopt,Platforms,FALSE,"Dockerは、アプリケーションとその依存関係をコンテナとしてパッケージ化するオープンソースのプラットフォームです。一般的には、アプリケーションの開発、テスト、デプロイメント等のフェーズで利用されます。

プロジェクトでの利用状況
開発用DBのコンテナ化やK8sで使用するイメージのビルドに使用しています。"
Docker Desktop,Adopt,Tools,FALSE,Docker Desktopは、DockerとKubernetesをローカルPCで動かすためのツールです。アプリケーションをコンテナ化し、プラットフォームに依存せず統一的な環境での動作を可能にします。開発・テスト環境構築やマイクロサービスの導入等に利用します。
DockerCompose,Adopt,Tools,FALSE,"DockerComposeは、複数のDockerコンティナを管理するツールです。YAMLファイルに設定を記述し、一命令でアプリケーションとサービスの環境を一貫してセットアップできます。よくマイクロサービスの開発やテストに使用されます。

プロジェクトでの利用状況
テスト環境の構築に使用しています。"
draw.io,Apopt,Tools,FALSE,"draw.ioは、フローチャートやプロセス図などの各種ビジュアル図式を作成できる無料のオンラインツールです。アーキテクチャ設計、ワークフローの可視化、プロジェクト計画などに使用されます。

プロジェクトでの利用状況
プロジェクトではシーケンス図などの設計に使用しています。"
Elasticsearch Service,Adopt,Platforms,FALSE,Elasticsearch Serviceは、全文検索やデータ分析を提供するクラウドベースのサービスです。企業は大量のデータを短時間で効率的に検索、解析、視覚化するために使用します。
Element Plus,Adopt,languages-and-frameworks,TRUE,"Element Plusは、Vue 3.0のためのデスクトップ向けUIライブラリです。50以上のVueコンポーネントを提供しており、Webアプリケーション開発を容易にします。一般的には、ダッシュボード、管理画面などに使用されます。

プロジェクトでの利用状況
Webアプリのフロントエンドのデザイン構築のために使用しています。"
Entity Framework,Adopt,languages-and-frameworks,TRUE,Entity Frameworkは.NET開発用のオープンソースのオブジェクトリレーショナルマッピング（ORM）フレームワークです。データベースと.NETオブジェクト間のデータ変換を自動化します。一般的にはデータベース操作を簡素化するために使用されます。
ESLint,Adopt,Tools,FALSE,ESLintはJavaScriptの静的コード解析ツールで、コーディング規約や間違いを自動でチェックします。一般的なユースケースでは、コードの品質向上や一貫性の保持に役立てられます。
Expo,Adopt,languages-and-frameworks,FALSE,"ExpoはJavaScriptを使用してネイティブアプリを作成するためのツールチェーンです。主にReact Nativeアプリの開発に利用され、ユースケースとしては、クロスプラットフォーム（iOS, Android）アプリケーションのリッチなユーザーインターフェース作成が考えられます。

プロジェクトでの利用状況
React Nativeアプリの開発に使用しています。"
Express,Adopt,languages-and-frameworks,FALSE,"Express.jsは、Node.jsで作られた高速で非常に柔軟なWebアプリケーションフレームワークです。ルーティング、ミドルウェア構成など、Webアプリケーション作成に必要な主要な機能を提供します。APIサーバの構築やウェブサイトの開発などに用いられます。

プロジェクトでの利用状況
Webアプリのバックエンドとして使用しています。"
fastlane,Adopt,Tools,TRUE,fastlaneはiOSとAndroidの開発プロセスを自動化するツールです。ビルド、テスト、リリースなどの繰り返し作業を効率化します。特にApp StoreやGoogle Playへのアプリ提出をスムーズに進行するユースケースに適しています。
Figjam,Adopt,Tools,FALSE,"FigjamはFigma社から提供されるコラボレーションツールで、デザイン思考プロセスを共有し、アイデアを視覚化できます。ユーザーはブレインストーミング、プロジェクト計画、デザインのフィードバック等に使用します。

プロジェクトでの利用状況
アプリの画面設計やふりかえり用のボードとして使用しています。"
Firebase Analytics,Adopt,Platforms,FALSE,"Firebase AnalyticsはGoogleの無料アナリティクスツールで、アプリの使用状況やユーザー行動を詳細に追跡し、分析を容易にします。一般的に、マーケティングキャンペーンの効果測定やユーザーエンゲージメントの把握に利用されます。

プロジェクトでの利用状況
アプリの利用状況をBigQueryに連携するために使用しています。"
Firebase App Distribution,Adopt,Platforms,FALSE,"Firebase App Distributionは開発中のアプリをテストユーザーに簡単に配布するツール。開発者がビルドをアップロードし、テスターへ招待送ることで早期段階でフィードバックを得る事が可能。

プロジェクトでの利用状況
GitHub Actionsとfastlaneを組み合わせてチーム内でのテスト配信を自動化し、Firebase App Distributionを利用しています。"
Firebase Authentication,Adopt,Platforms,FALSE,Firebase Authenticationは、ログインシステムを簡単に実装するためのGoogleのサービスです。一般的に、アプリケーションのユーザー認証や管理に使用されます。
Firebase Crashlytics,Adopt,Platforms,FALSE,"Firebase Crashlyticsは、リアルタイムでアプリのクラッシュレポートを監視、トラッキングできるツールです。開発者はこれを使って、問題の原因を特定し、アプリの品質とパフォーマンスを向上させることができます。

プロジェクトでの利用状況
アプリのクラッシュレポート取得のために使用しています。"
Firebase DynamicLinks,Assess,Platforms,FALSE,"Firebase DynamicLinksは、アプリ内特定のロケーションへリンクする一方向ダイナミックリンクを提供するFirebaseの機能です。インストール後すぐにアプリの特定のコンテンツにリダイレクトされるため、新規ユーザー獲得や既存ユーザーの再エンゲージメントに効果的です。
しかし、Firebase Dynamic Links は非推奨になっており、サービスは 2025 年 8 月 25 日に廃止されます。"
Firebase Hosting,Adopt,Platforms,FALSE,Firebase Hostingは、高速でセキュアな静的および動的Webコンテンツの展開を提供する開発ツールです。一般的に、シングルページアプリ、ランディングページ、ブログなどのWebサイトのホスティングに使用されます。
FL Chart,Adopt,languages-and-frameworks,TRUE,"FL ChartはFlutter用のチャートパッケージで、線、棒、円などのさまざまな種類のチャートを描画することができます。主に、データ可視化や情報をグラフィカルに表示したい場合に使用されます。

プロジェクトでの利用状況
モバイルアプリ内で表示するグラフの描画に使用しています。"
Fluent UI,Adopt,languages-and-frameworks,FALSE,"Fluent UIはMicrosoftが開発したUIフレームワーク。Windows、iOS、Android、WebおよびmacOS向けに一貫性のあるユーザーインターフェースを作成します。一般的にはOffice 365によるWebアプリ開発などで利用されます。

プロジェクトでの利用状況
アプリのフロントエンドに使用しています。"
Flutter,Adopt,languages-and-frameworks,TRUE,"FlutterはGoogleが開発したオープンソースのUI開発キットで、iOSやAndroidのネイティブアプリを一つのコードベースで開発できます。一般的には、クロスプラットフォームアプリの開発に用いられます。

プロジェクトでの利用状況
プロジェクトではiOS, Androidアプリの開発に使用しています。"
Flutter Hooks,Adopt,languages-and-frameworks,TRUE,Flutter Hooksは、Flutterの状態管理を改善するライブラリです。Hookの概念を導入することで、コードの再利用とロジックの分離を容易にし、コードの整理と見通しを改良します。一般的に、ステートフルなロジックの共有や状態のライフサイクルの制御に用いられます。
flyway,Adopt,Tools,FALSE,"Flywayは、データベースのバージョン管理とマイグレーションを容易に行うためのオープンソースツールです。一般的なユースケースは、データベースのスキーマ変更の追跡や、複数の環境間での一貫性の確保です。

プロジェクトでの利用状況
DBマイグレーションツールとして使用しています。"
"GA4, TagManager",Adopt,Tools,TRUE,"GA4（Google Analytics 4）は、ウェブサイトやアプリのユーザー行動を詳細に追跡し、データ分析するためのツールです。一般的なユースケースは、市場調査や広告戦略の検証です。
TagManagerは、ウェブサイトにトラッキングコードを追加し、管理するためのGoogleのサービスです。ユーザー行動追跡やSEO対策等によく使われます。

プロジェクトでの利用状況
フロントエンドアプリの分析基盤で利用しています。"
GAS TEST(by fossamagna),Adopt,Tools,FALSE,"GAS TESTは、Google Apps Script(GAS)の自動テストを行うツールです。GASはGoogleが提供するクラウド上で動作する、JavaScriptベースのスクリプトです。GAS TESTを用いることで、GASの挙動を自動的にテスト出来ます。一般的には、定期的なスクリプトの実行・修正前後の挙動確認などに利用されます。

プロジェクトでの利用状況
GASのテストに使用しています。"
gather,Trial,Tools,TRUE,"Gatherはオンライン上で仮想空間を作り、自由にコミュニケーションを取ることが可能なツールです。一般的には、リモートでの会議やイベント、ソーシャルゲーマー、リモートワークのコラボレーション等に利用されます。

プロジェクトでの利用状況
リモートチームでのコミュニケーションに利用しています。"
gatling,Trial,Tools,FALSE,"Gatlingは負荷テストツールで、ウェブアプリケーションのパフォーマンスを検証します。一般に、多数のユーザーがサーバーに同時アクセスするシナリオをシミュレートし、アプリケーションのスケーラビリティを評価するために使用されます。

プロジェクトでの利用状況
性能試験で負荷テストを行うために使用しています。"
gcloud,Adopt,Tools,FALSE,"gcloudはGoogle Cloudのコマンドラインツールです。開発者はこれを使ってGoogle Cloudプラットフォームでリソースを管理し、アプリケーションを開発、デプロイすることが可能です。ユースケースとしては、コマンドラインからのVMの作成、バケットの操作、ビッグクエリ操作などがあります。

プロジェクトでの利用状況
Google Cloud Functionsのデプロイに使用しています。"
git,Adopt,Tools,FALSE,"Gitはソフトウェア開発でのバージョン管理を助けるツールです。コードの変更履歴を記録し、複数の人が同時に作業できます。ユースケースとしては新機能の開発、バグ修正、コードレビューなどがあります。

プロジェクトでの利用状況
ソースコードの管理に利用しています。"
git-flow,Adopt,Tools,FALSE,"git-flowはバージョン管理ツールGitのためのワークフローシステムであるGit-flowブランチ運用モデルのための拡張です。

プロジェクトでの利用状況
git CLI で git-flow 拡張コマンドを利用するために使用しています。"
GitHub,Adopt,Platforms,FALSE,"GitHubはオンラインのバージョン管理システムであり、ソフトウェア開発の共同作業を可能にします。一般的なユースケースとしては、コードのバージョンを追跡し、バグ修正や機能追加を分岐・統合すること、また他の開発者と共同作業することが挙げられます。

プロジェクトでの利用状況
ソースコードの管理に使用しています。"
GitHub Actions,Adopt,Platforms,FALSE,"GitHub Actionsは、コードリポジトリに対する開発ワークフロー自動化ツールです。CI/CDパイプラインの構築、テスト&デプロイ、一連のタスク実行に使われます。

プロジェクトでの利用状況
CI/CDパイプラインなどで利用しています。
・ビルド＆テスト
・静的解析
・定型処理の実行(タグ＆GitHub Releaseの作成、オンデマンドのE2Eテスト実行など)
・アプリのテスト配信
・バックエンドのデプロイ"
GitHub Copilot,Trial,Tools,TRUE,"GitHub Copilotは、GitHubとOpenAIによって開発されたAIベースのコード補完ツールです。コードの一部を入力すると、AIがそのコードを完成させる提案を提供します。ユースケースとしては、新しいコードの書き始めや、一般的な関数の自動生成があります。

プロジェクトでの利用状況
実装時の効率化を目的に利用しています。
導入を検討中のプロジェクトもあります。セキュリティーポリシーに違反しないか確認している状況です。"
GitHub Desktop,Adopt,Tools,FALSE,"GitHub Desktopは、コードを直感的に管理できるデスクトップクライアントです。主なユースケースは、リポジトリの管理、ブランチの作成・移動・削除、プルリクエスト、マージなどのGitHub操作を視覚的に容易に行える点にあります。

プロジェクトでの利用状況
Gitクライアントとして使用しています。"
GitHub Enterprise,Adopt,Platforms,FALSE,"GitHub Enterpriseは、企業が自分たちのネットワーク内でGitHubをホストできるプラットフォームです。コード共有、レビュー、バージョン管理など、プライベートな環境でGitHubのすべての機能を活用できます。

プロジェクトでの利用状況
ソースコード管理に利用しています。"
GitHub Packages,Adopt,Platforms,FALSE,GitHub Packagesは、公開またはプライベートなプロジェクトのためのパッケージホスティングサービスです。一般的に、コードのバージョン管理と共有、デプロイ、そして依存関係の追跡の自動化に使われます。
GitLab,Adopt,Platforms,FALSE,GitLabはバージョン管理、CI/CD、イシュートラッキングなど開発全体のプロセスを統合するプラットフォームです。ソフトウェア開発プロジェクトの効率的な管理・進行に使用されます。
GitLab Runner,Adopt,Platforms,FALSE,GitLab Runnerは、ソースコードの変更を自動的にテスト／ビルドするCI/CDツールです。主にソフトウェア開発の自動化などに使われ、バグの早期発見やデプロイ作業の効率化に貢献します。
GitOps,Adopt,Techniques,FALSE,"GitOpsは、Gitを一元的な真実の源として使用するインフラストラクチャとアプリケーションのデプロイメント手法です。一般的には、CI/CDパイプライン、クラウドネイティブテクノロジーと組み合わせて使用されます。また、システムの状態を追跡し、修正に効率的に対応するために用いられます。

プロジェクトでの利用状況
・リリースフローに採用しています。
・デプロイ対象のシステムが多数あり、毎回のリリース時に作業負荷が高すぎるため、省力化のために導入試行中です。"
Golden Toolkit,Adopt,languages-and-frameworks,TRUE,"Golden Toolkitは、FlutterでUIのスナップショットテストを行うためのライブラリです。テスト対象のウィジェットを静的にレンダリングし、期待する画像と比較します。ウィジェットのビジュアルリグレッションテストに利用されます。

プロジェクトでの利用状況
FlutterアプリのVRTを行うために使用しています。
UIの細かなチェックを項目毎にコード化すると維持とそれが本当に期待した結果を検証しているのかを確認するのが大変なので、UIの見た目の検証はGolden Toolkitでキャプチャ画像が期待通りかでテストしています。"
Google Analytics,Adopt,Platforms,TRUE,"Google Analyticsは、ウェブサイトやアプリのユーザー行動をトラッキング・分析するツールです。一般的には、ユーザーエンゲージメント、トラフィックソース、コンバージョンレートなどのデータを収集・解析し、マーケティング戦略やウェブサイト最適化を行うために使用されます。

プロジェクトでの利用状況
アプリストアの利用状況分析で使用しています。"
Google Apps Script,Adopt,Platforms,FALSE,"Google Apps Scriptは、Google Workspace製品（Gmail、カレンダー、Driveなど）と連携してカスタムスクリプトを作成するためのJavaScriptベースのプラットフォームです。一般的なユースケースは、メールの自動化、ファイル整理、スケジュール管理など。

プロジェクトでの利用状況
バックエンド処理に利用しています。"
Google Cloud Armor,Adopt,Platforms,TRUE,"Cloud ArmorはGoogle Cloud PlatformのWebアプリケーションファイアウォールサービスで、ユーザーのネットワークとアプリケーションに対する不正なアクセスやDDoS攻撃を防ぐため使用されます。

プロジェクトでの利用状況
プロジェクトではリクエストのフィルタリングに使用しています。"
Google Chat,Assess,Tools,FALSE,"Google ChatはGoogle Workspaceの一部で、チーム間でのコミュニケーションを助けるメッセージングツールです。通常、遠隔での協働、プロジェクト管理、文書共有などで使用されます。

プロジェクトでの利用状況
業務連絡・雑談用チャットとして利用しています。"
Google Cloud API,,Platforms,TRUE,"Google Cloud APIは、Google Cloudの各サービス（ストレージ、機械学習、データベース等）にプログラムからアクセスするためのインターフェース。データ分析、AI開発、アプリ運用等に広く使用されます。

プロジェクトでの利用状況
Google Cloud FunctionsからGoogle Workspacesのサービスを利用するために使用しています。"
Google Cloud Firestore,Adopt,Platforms,FALSE,Cloud FirestoreはGoogleのリアルタイムデータベースサービスです。
Google Cloud Functions,Adopt,languages-and-frameworks,TRUE,Google Cloud Functionsは、Google Cloudのサーバーレス実行環境で、イベント駆動の関数を実装・管理します。一般的なユースケースは、シンプルなAPI、リアルタイムファイル処理、またはデータのクリーニングと集約などです。
Google Cloud Function for Firebase,Adopt,Platforms,FALSE,"FirebaseのCloud Functionは、バックエンド開発をサーバーレスで実装できる機能です。FirebaseサービスのイベントやHTTPSリクエストに応答して自動的に実行され、ビジネスロジックをカプセル化してクラウド側で非同期に実行する一般的なユースケースがあります。

プロジェクトでの利用状況
プロジェクトではバッチ処理やCloud SQL、DBアクセスなどに使用しています。"
Google Cloud Logging,Adopt,Platforms,FALSE,"CloudLoggingはGoogle Cloudのツールで、アプリケーションとシステムのログデータを収集、表示、分析するためのサービスです。ユースケースには、エラートラッキング、デバッグ、アプリケーションパフォーマンスモニタリングなどがあります。

プロジェクトでの利用状況
プロジェクトでは主にログデータの収集に使用しています。"
Google Cloud Pub/Sub,Adopt,Platforms,FALSE,Cloud Pub/SubはGoogle Cloudのリアルタイムメッセージングサービスで、アプリケーション間の非同期通信やイベント駆動型のマイクロサービス構成を可能にします。ユースケースとしては、ログ集約、アラート通知、イベント駆動型処理などがあります。
Google Cloud SQL,Adopt,Platforms,FALSE,"Cloud SQLは、Google Cloudが提供する完全マネージド型のリレーショナルデータベースサービスです。一般的には、MySQL、PostgreSQL、SQL Serverなどのデータベースエンジンをサポートし、アプリケーションデータの格納・管理に向けて使われます。

プロジェクトでの利用状況
プロジェクトではWebアプリのDBとして使用しています。"
Google Cloud SQL(My SQL),Adopt,Platforms,FALSE,Google Cloud SQLは、Google Cloud上でMySQLデータベースをホストし管理するための完全管理型サービスです。一般的にはWebアプリケーションやデータ分析のために使われます。
Google Cloud Spanner,Apopt,Platforms,FALSE,Cloud SpannerはGoogle Cloudのスケーラブルなリレーショナルデータベースサービスです。大規模な分散トランザクション、グローバルなコンシステンシー、SQLクエリなどに対応し、一般的に大量データの管理や分析に使用されます。
Google Cloud Storage,Adopt,Platforms,FALSE,"Cloud Storageは、データを遠隔サーバーに保存し、インターネット経由でいつでもアクセス可能にするオンラインサービスです。バックアップ、シェアリング、リモートアクセス等、データストレージと管理の用途に広く使われます。

プロジェクトでの利用状況
プロジェクトでは画像ファイルやPDFなどを保存するために使用しています。"
Google Cloud Storage,Adopt,Platforms,TRUE,"Google Cloud Storageは、Googleが提供するクラウドベースのストレージサービスで、データを効率的に保存・取得できます。一般的に、大規模なデータ分析、バックアップ、アーカイブ、災害復旧などに用いられます。

プロジェクトでの利用状況
連携システムとのI/Oで利用しています。"
Google Dataflow,Apopt,Platforms,FALSE,"Google Dataflowは、Google Cloudのフルマネージドなストリームおよびバッチデータ処理サービスです。大量のデータをリアルタイム・高速に処理、分析できます。ユースケースとしては、ログ分析、ETL作業、リアルタイムのダッシュボード作成などがあります。

プロジェクトでの利用状況
ストリームによるデータ処理で利用しています。"
Google Drive,Adopt,Tools,FALSE,"Google Driveはクラウドベースのファイルストレージと同期サービスで、ユーザーがファイルを保存、共有、編集できます。ユースケースとしては、ドキュメント共有、協業、データバックアップなどがあります。

プロジェクトでの利用状況
プロジェクトメンバー以外の関係者とのやり取りするQA表などのドキュメント置き場として利用しています。"
Google Maps,Adopt,Platforms,FALSE,"Google Mapsは地図情報ソフトウェアで、道路案内、ストリートビュー、3D建築描画などを提供します。一般的には道順検索や現在地確認、観光情報確認に使用されます。

プロジェクトでの利用状況
フロントエンドアプリで地図を表示するときに利用しています。"
Google Meet,Adopt,Tools,FALSE,"Google Meetは、Googleが提供するビデオ会議サービスです。オンライン会議、テレワーキング、遠隔教育など、リアルタイムのコミュニケーションが必要な場面で使用されます。

プロジェクトでの利用状況
プロジェクトの作業時はほぼ常時接続で利用しています。"
"Google Place API, GeoCoding API",Adopt,Platforms,FALSE,"Google Place APIは場所の詳細情報を提供するサービスで、レストランのレビューや営業時間等を取得できる。ユースケースとしては検索エンジンや旅行アプリなど。

GeoCoding APIは住所と地理的な座標の相互変換サービス。ユースケースとしてはマップ上に位置情報を表示したり、位置情報から実際の住所を取得する場面等に使用。

プロジェクトでの利用状況
スポット検索でフロントエンドアプリから利用しています。"
Google Spaces,Adopt,Tools,FALSE,"Google Spacesはグループ間で簡単に会話を行う、共有を行い、特定のトピックを検索することができるソーシャルネットワーキングサービスです。一般的には、プロジェクト協同作業やトピックベースの会話に使用されます。

プロジェクトでの利用状況
・メンバや関連する方々の情報交換に利用しています。
・ユーザーとのチャットルーム（anaアカウントで利用）／各案件ごとにチャットルーム開設、リリース後の問い合わせなども受けています。"
Gradle,Apopt,Tools,FALSE,GradleはJava、C++、Pythonなど複数の言語に対応した強力なビルドツールです。シンプルで使いやすく、依存性管理や自動化タスク等、ソフトウェア開発を円滑に進行させるのに非常に有用です。
GraphQL,Adopt,languages-and-frameworks,TRUE,GraphQLはAPI開発のためのクエリ言語で、クライアントが特定のデータを正確に取得する機能を提供します。ユースケース：複数のエンドポイントではなく、一つのエンドポイントでデータを効率的にフェッチするときに使用されます。
Gremlin,Adopt,languages-and-frameworks,TRUE,"

プロジェクトでの利用状況
グラフDBクエリ言語として利用しています。"
gulp,Adopt,languages-and-frameworks,,"gulpはJavaScriptのタスクランナーで、手動で反復的に実行する作業を自動化します。例えば、コードの最小化・変換、テスト実行、ブラウザのリロードなど。一般的には、Web開発でのビルドプロセスの自動化に使われます。

プロジェクトでの利用状況
タスク管理ツールとして利用しています。"
HTML,Adopt,languages-and-frameworks,FALSE,"HTML（Hyper Text Markup Language）は、ウェブページ作成のためのマークアップ言語で、テキストに意味や構造を組み込むための要素（タグ）を提供します。ユースケースはウェブサイトやウェブアプリケーションの開発です。

プロジェクトでの利用状況
エンドユーザー向けアプリの実装"
husky + commitlint,Assess,Tools,TRUE,"huskyはGitのフックを自動化し、commitlintはコミットメッセージの形式をチェック・強制するツールです。彼らは一緒に使われ、一貫性と明瞭さをもたらすためのコミットメッセージを確保します。

プロジェクトでの利用状況
huskyはcommitlintをcommit時に動かすため、commitlintはコミットメッセージが規定のフォーマットにしたがっているかチェックするために利用しています。
GitHubのRPのタイトルにもcommitlintを適用してSquash and mergeでデフォルトブランチにマージする運用にしています。こうすることでコミットメッセージを見返した時に何をしたのかメッセージだけである程度推測できるようにしたいためです。"
IIS,Adopt,Platforms,FALSE,"IIS（インターネットインフォーマーションサービス）は、Microsoftが作成したWebサーバーソフトウェアです。一般的なユースケースは、Webサイトのホスティング、ウェブアプリケーションおよびAPIの作成・配布を行うこと。

プロジェクトでの利用状況
Webサーバ"
Integration Test (Flutter),Adopt,languages-and-frameworks,TRUE,"FlutterのIntegration Testは、Flutterアプリ全体を操作し検証するためのライブラリです。個々の画面やウィジェットではなく、全体的なユーザーのフローをシミュレートしてテストします。一般的には、実際のユーザー経験と同期させたテストシナリオを作成・実行する際に使用されます。

プロジェクトでの利用状況
ユーザーストーリー（複数画面の遷移）、ユーザー入力（ドラッグ、テキスト入力など）で期待した振る舞いをするのかをテストするために利用しています。"
IntelliJ,Adopt,Tools,FALSE,"IntelliJは、Javaを中心に多数のプログラミング言語をサポートする統合開発環境(IDE)で、JetBrains社によって開発されました。コード補完、リファクタリング、デバッグなどの一般的な開発タスクを効率的に行うことができます。

プロジェクトでの利用状況
開発用エディタとして使用している"
Isar,Adopt,languages-and-frameworks,TRUE,"Isarは、Dart言語用のデータベースライブラリであり、特にFlutterフレームワークと組み合わせて使用することが意図されています。Flutterは、モバイルアプリケーションやウェブアプリケーションを構築するためのUIフレームワークであり、Dart言語を使用しています。Isarは、このDart言語向けに設計された高性能で使いやすいデータベースです。

プロジェクトでの利用状況
FlutterアプリのローカルDBとして使用しています。読み書きともに非常にパフォーマスが良いです。RDBほど検索の自由度はないですが、Indexを貼ったり、フィルターしたりできるので困ることはないです（よほど複雑な検索でなければ問題ない、そもそもそのような検索がスマホアプリで必要になるのかの方が疑問です）。
開発時にはDBのInspectorツールもデフォルトで起動して、すぐにDBの内容の確認もでき開発時に重宝しています。"
Java,Adopt,languages-and-frameworks,FALSE,"Javaは、プラットフォームに依存しない汎用のプログラミング言語で、ウェブアプリケーション、モバイルアプリ、データベース接続等に広く使われています。堅牢さと安全性が特徴です。

プロジェクトでの利用状況
バックエンドの実装に使用しています。K8sのpod上で動くhttpサーバ、あるいは定期実行のバッチ処理を実装するために使っています。"
JavaScript,Adopt,languages-and-frameworks,FALSE,"JavaScriptは動的なウェブサイトやウェブアプリケーションの開発に使われるスクリプト言語。ユーザーインタラクションを実装したり、動的コンテンツを提供したりする一方で、サーバーサイドの開発も可能です。

プロジェクトでの利用状況
フロント、バックエンド、CLIで利用しています。
既存のソースとして存在していますがTypeScriptに統一を検討しています。"
Jenkins,Adopt,Tools,FALSE,"Jenkinsは、開発者がソフトウェアの継続的な統合、テスト、デプロイを自動化するためのオープンソースツールです。一般的にはバグ検出・修正、新機能の迅速な展開等に使用されます。

プロジェクトでの利用状況
CIに使用しています。"
Jest,Adopt,Tools,FALSE,"JestはFacebookが提供するJavaScriptのためのテストフレームワークです。ユニットテストや統合テストを行う際に使用され、ReactやVueなどの主要なフロントエンドフレームワークとの相性が良いです。

プロジェクトでの利用状況
フロントエンドのテストで利用しています。"
Jira,Adopt,Tools,TRUE,"Jiraは、プロジェクト管理とバグ追跡に特化したソフトウェアです。一般的に、アジャイル開発手法を支援し、チーム間のコラボレーションを助け、開発作業の進行状況を可視化します。

プロジェクトでの利用状況
PBIやスプリント中のバックログなどを管理しています。"
joi,,,,"Joiは、JavaScriptオブジェクトを効率的に検証するための強力なスキーマ記述言語・バリデーションライブラリです。主にサーバサイドでデータ収集とバリデーション、またAPIのパラメータのバリデーションなどに使用されます。

プロジェクトでの利用状況
JSONスキーマ定義＆バリデータライブラリとして利用しています。"
JUnit,Adopt,Tools,FALSE,"JUnitはJava専用の自動化テストフレームワークです。コードの一部分が期待通りに動作しているかを確認するユニットテストを容易に作成・実行可能にします。主に開発段階でのバグ検出やリファクタリング支援のために使用されます。

プロジェクトでの利用状況
バックエンドのテストで利用しています。"
Kafka/Zookeeper,Adopt,Platforms,FALSE,"Kafkaはリアルタイムのメッセージングとストリーム処理を可能にするオープンソースプラットフォームで、大量のデータを一貫性を保ちながら迅速に処理するシナリオに適用されます。Zookeeperは分散システムを調整するためのツールで、設定管理、ネームサービス、同期等に使用されます。

プロジェクトでの利用状況
KubernatesのPod間をまたがる非同期処理のメッセージングに使用しています。"
Kibana,Adopt,Tools,FALSE,"KibanaはElastic Stackのビジュアル化ツールで、Elasticsearchに蓄積されたデータを可視化し、分析を簡単に行うことができます。一般的にはログ分析や時系列データの分析に利用されます。

プロジェクトでの利用状況
ログの確認、障害解析に使用しています。"
Kotlin,Adopt,languages-and-frameworks,FALSE,"KotlinはJavaと互換性のある静的型付け言語で、Androidアプリやサーバーサイド開発に通常使用されます。コードは簡潔で、null安全性と高度な機能性を提供します。

プロジェクトでの利用状況
バックエンドの実装に使用しています。
KubernatesのPod上で動くhttpサーバ、あるいは定期実行のバッチ処理を実装するために使用しています。"
Kubernates,Adopt,Platforms,FALSE,"Kubernetesは、コンテナ化されたアプリケーションのデプロイ・スケーリング・運用を自動化するオープンソースのプラットフォームです。一般的には、大規模なマイクロサービスを管理する用途で使用されます。

プロジェクトでの利用状況
バックエンドの実行環境として使用しています。AWS EC2上に環境構築しており、EKSは使用していません。"
Kustomize,Adopt,Tools,FALSE,"KustomizeはKubernetes用の設定管理ツールで、多様な環境に対応したマニフェストの管理が可能です。ベースとなる設定を作り、その上で差分を管理するような一般的なユースケースがあります。

プロジェクトでの利用状況
CDに使用しています。Kubernatesの構成管理用のyamlファイルを、実行環境ごとの差分を局所定義した状態で管理しています。"
Lambdaのウォームアップ,Trial,Techniques,TRUE,"LambdaウォームアップはAWS Lambda関数のコールドスタート問題を解消するためのプロセスです。スケジュールされたローテーションによりLambda関数を定期的にトリガーし、レスポンス時間を速く保つことが一般的なユースケースです。

プロジェクトでの利用状況
コールドスタートを回避するためServerlessのプラグインで5分毎にLambdaをキックしています。"
LangChain,Adopt,languages-and-frameworks,TRUE,"LangChainはAIを駆使した多言語自動翻訳プラットフォーム。テキスト全体の意味を考慮に入れて、自然な翻訳を提供します。一般的なユースケースは、Webコンテンツのローカライズ、多言語対応ドキュメンテーションなどです。

プロジェクトでの利用状況
PDF, CSVといったファイル取り込み、ベクトルストアの作成および検索、LLMの利用など、アプリの中核を担う処理を実装する際に利用しています。"
Lima,Assess,Platforms,TRUE,"Limaはコンテナ運用を便利にするためのツールで、DockerコンテナをLinux仮想マシン上で動かすことができます。一般的に開発者がローカル環境でLinuxの動作検証を行う際に使用されます。

プロジェクトでの利用状況
Docker Desktop有料化に伴い、Docker実行環境として利用しています。"
LocalStack,Adopt,Tools,FALSE,"LocalStackは、デベロッパーがローカル環境でAWSクラウドリソースを模倣するためのフレームワークです。テストとデバッグ用途、特にAWSを使用した開発を継続的に行いたい場合に役立ちます。

プロジェクトでの利用状況
ローカルでのテストやCIで使用しています。"
Material UI,Hold,languages-and-frameworks,FALSE,"Material UIはReactのUIフレームワークで、頑健で美しいUIデザインを迅速に実装するためのコンポーネントを提供します。一般的なユースケースは、アプリの見た目をGoogleのMaterial Designガイドラインに合わせたい場合です。

一部(ポップアップするようなコンポーネント)が変更するCSSが画面全体の再描画を発生させてしまう問題がありました。そのため著しくパフォーマンスが悪くなったり、挙動が不安定になることがあります。利用方法によってはこのような問題が発生することを考慮して採用を検討する必要があります。"
Mattermost,Adopt,Tools,FALSE,Mattermostはオープンソースのチームコラボレーションツールで、内部通信とコミュニケーションを改善するために使用されます。メッセージング、ファイル共有、ビデオ通話などを提供します。
Mermaid,Access,Tools,FALSE,"Mermaidは、図やフローチャートを生成するためのシンプルなマークダウン記法を提供するJavaScriptベースのライブラリです。コード記述を図表として表現する各種ドキュメンテーションに使用されます。 

プロジェクトでの利用状況
UMLで作成した図をコードとして管理するために利用しています。"
metabase,Trial,Tools,FALSE,"Metabaseはデータ分析と可視化のためのオープンソースソフトウェアで、データベースからの情報抽出を一般のユーザーにも可能にします。一般的なユースケースにはビジネスレポートの作成やKPIダッシュボードの提供などがあります。

プロジェクトでの利用状況
開発用のメトリクス収集に使用しています。"
Microsoft Azure Data Explorer,Adopt,Tools,TRUE,"Microsoft Azure Data Explorerは、大量のデータをリアルタイムに分析し、インサイトを提供するクラウドベースのサービスです。一般的には、ログやテレメトリデータの解析、時系列データの探索、IoTデータの管理などに使用されます。

プロジェクトでの利用状況
Azure上に格納されているファイル操作、主にトレースログの参照で使用しています。"
Microsoft Azure Data Studio,Adopt,Tools,TRUE,"Microsoft Azure Data Studioは、データプロフェッショナル向けの多機能開発環境です。クロスプラットフォームに対応し、データの探索、ビジュアライゼーション、クエリ編集などが可能です。一般的にはSQLサーバーの管理やデバッグに使われます。

プロジェクトでの利用状況
Azure上に構築されているDBのデータ操作/参照に使用しています。"
Microsoft Entra ID（旧 Azure Active Directory）,Adopt,Platforms,TRUE,"Microsoft Entra IDは、ユーザー認証とアクセス管理を提供するセキュリティサービスです。一般的なユースケースは、オンプレミスとクラウドのワークロードのユーザーID情報を一元化し、アクセス制御を行うのに使われます。

プロジェクトでの利用状況
アプリのユーザー認証で使用しています。"
Microsoft Teams,Assess,Tools,FALSE,"Microsoft Teamsは、グループチャット、会議、ノート共有、添付ファイルなどを組み合わせたチームワークハブです。リモートワークや分散チームでのコラボレーションに一般的に使用されます。

プロジェクトでの利用状況
顧客とのコミュニケーション、予定管理、ファイル共有などに使用しています。"
Miro,Adopt,Tools,TRUE,"Miroはオンラインのコラボレーションツールで、リアルタイムな情報共有と視覚的なコミュニケーションを可能にします。ユースケースには、研究開発、ブレインストーミング、プロジェクト管理、ユーザーエクスペリエンスデザインなどがあります。

プロジェクトでの利用状況
ふりかえり、ワークショップ、画面イメージ作成、情報の集約などで使用しています。"
MySQL,Adopt,Platforms,FALSE,"MySQLは、世界中で広く使われているオープンソースのリレーショナルデータベース管理システムです。ウェブアプリケーションのデータ格納や検索操作などに一般的に使用されます。

プロジェクトでの利用状況
実行環境のデータストアとして使用しています。"
NestJS,Adopt,languages-and-frameworks,FALSE,"NestJSは、効率的なサーバーサイドアプリケーションを作成するためのNode.jsフレームワークです。TypeScriptで記述され、OOP、FP、FRPの要素を混合できる。REST API、Microservices、GraphQLなど様々なアプリケーションの開発に使用されます。

プロジェクトでの利用状況
WebアプリのAPIサーバ"
NetSkope,Trial,Platforms,TRUE,"NetSkopeはクラウドセキュリティツールで、機密データ保護や脅威防止、クラウドアプリケーションの可視性とコントロールを提供し、ビジネスがクラウドサービスを安全に利用できるよう支援します。

プロジェクトでの利用状況
開発端末の通信制御"
new rellic,Adopt,Tools,FALSE,"New Relicは、アプリケーションパフォーマンス管理とリアルタイム監視ツールです。開発者はコードの問題を診断し、システムボトルネックを発見し、ユーザーエクスペリエンスを改善するために使用します。

プロジェクトでの利用状況
稼働状況の確認、障害検知に使用しています。"
newman,Trial,Tools,FALSE,"newmanはPostmanで設計したAPIテストをコマンドラインから実行できるツールです。定期的なAPIテスト、CI/CDパイプラインの一部としてのテスト実行などに利用されます。

プロジェクトでの利用状況
CI上でのAPI実行に使用しています。"
Next.js,Adopt,languages-and-frameworks,FALSE,"Next.jsはReactのフレームワークで、サーバーサイドレンダリングや静的サイト生成を簡単に実現できます。一般的なユースケースは、SEOに優れたWebサイトやアプリの開発に使われます。

プロジェクトでの利用状況
フロントエンドの実装やLPの作成に使用しています。"
Nginx,Adopt,Platforms,FALSE,"Nginxは高性能なHTTPサーバ・リバースプロキシサーバです。静的ファイル配信やリクエストの振り分け、ロードバランシング機能が強化されており、高アクセスサイトのウェブサーバやAPIサーバとして使われます。

プロジェクトでの利用状況
WebアプリのWebサーバとして使用しています。"
nock,Trial,,,"nockはHTTPリクエストのモックライブラリで、Node.jsに対応しています。ユニットテストなどのテスト環境で、実際のAPIリクエストとレスポンスの動作をエミュレートするのに使われます。

プロジェクトでの利用状況
外部APIをモックするために利用しています。"
Node.js,Adopt,languages-and-frameworks,FALSE,"Node.jsはサーバー側のJavaScript環境で、非同期IOをサポートし、高性能なWebアプリケーションの開発を可能にします。一般的にはAPI開発、チャットアプリ、リアルタイムデータアプリなどに使用されます。

プロジェクトでの利用状況
バックエンドの実装などで多くのプロジェクトで採用しています。"
npm,Adopt,languages-and-frameworks,FALSE,"npmはNode Package Managerの略で、JavaScriptのパッケージマネージャーです。ライブラリやモジュールのインストール、更新、削除等の管理作業を行い、プロジェクトの依存関係を管理する。主にNode.jsの開発において使用されます。

プロジェクトでの利用状況
パッケージ管理に利用しています。"
NuGet,Adopt,Tools,FALSE,"NuGetは、.NET用のパッケージ管理システムで、コードのリユース、バージョン管理、依存関係の管理を容易にします。一般的には、プロジェクトに必要なライブラリやツールを簡単に追加・更新するために使われます。

プロジェクトでの利用状況
パッケージ管理に使用しています。"
Nuxt,,languages-and-frameworks,FALSE,"Nuxt.jsは、Vue.jsに基づくユニバーサルアプリケーション開発用のフレームワークです。サーバーサイドレンダリング、静的サイト生成、ホットリローディングなどの機能を備え、WebサイトやSPA、PWAの開発に用いられます。

プロジェクトでの利用状況
エンドユーザー向けアプリの実装に使用しています。"
Objective-C,Adopt,languages-and-frameworks,FALSE,"Objective-Cは、Smalltalkのメッセージ指向の特性を組み込んだC言語の上に構築されたプログラミング言語です。一般的にはAppleのMac OSおよびiOSのアプリ開発で使用されます。

プロジェクトでの利用状況
モバイルアプリのネイティブコードの実装に使用しています。"
Okta,Trial,Platforms,TRUE,"Oktaは、エンタープライズのアイデンティティとアクセス管理を行うクラウドベースのツールです。一般的なユースケースでは、社員のアクセス権限の管理、SSO（シングルサインオン）、MFA（多要素認証）の実装などに使用されます。

プロジェクトでの利用状況
開発環境の認証基盤として使用しています。"
OpenAPI,,,,"OpenAPIは、RESTful APIの定義およびドキュメンテーションを作成するための仕様です。一般的なユースケースは、APIの仕様を可視化し、ユーザーがAPIの挙動を理解しやすくすることです。

プロジェクトでの利用状況
フロントエンド向けに Stoplight で生成した OpenAPI 仕様を swagger-ui を使って S3ホスティングで公開しています。"
openapi-typescript,,,TRUE,openapi-typescriptはOpenAPI仕様からTypescript型を生成するツールです。エンドポイント定義から型安全なAPIクライアントを自動生成し、型エラーを防止します。一般的にはAPI開発時やエンドポイント追加時に使用されます。
oVice,Assess,Tools,TRUE,"oViceは仮想空間内での専用オフィス或いは組織間のコミュニケーションを提供するプラットフォームです。一般的にはリモートワークのための交流場所やオンラインイベントの開催場所として使用されます。

プロジェクトでの利用状況
音声、ビデオでのコミュニケーションを行うのに使用しています。oviceは誰がどこにいるかわかりやすく、他チームに質問しに行くのもやりやすい利点があります。"
PagerDuty,Adopt,Tools,FALSE,"PagerDutyは、ITインシデント警告管理プラットフォームです。急を要する問題が発生したら、即座に該当者に警告を送ります。一般的には、システム障害やエラーに対する迅速な対応、解決を目指すのに使用されます。

プロジェクトでの利用状況
障害通知に使用しています。"
PgAdmin4,,,,PgAdmin4は、PostgreSQLデータベースのためのパワフルなWebベースの管理ツールです。一般的なユースケースはデータベースの管理、クエリ実行、データモデリング、バージョンアップデートなどがあります。
Pinia,Adopt,languages-and-frameworks,TRUE,"Piniaは、Vue.js用の新世代の状態管理ライブラリです。データ共有やUIの状態を一元管理でき、Vuexの複雑さを解消します。ユースケースとしては、大規模なvue.jsアプリの状態管理が挙げられます。

プロジェクトでの利用状況
フロントエンドの開発で使用しています。"
PlantUML,Apopt,Tools,FALSE,"PlantUMLは、UML図をディスプレイやテキストエディタ上で描くための言語を提供するオープンソースツールです。クラス、シーケンス、状態遷移図などを簡単に描き、ソフトウェアやプロセスの設計とドキュメンテーションに利用されます。

プロジェクトでの利用状況
フロー設計に使用しています"
playwright,Adopt,languages-and-frameworks,FALSE,"Playwrightは、Microsoftが開発したWebブラウザ自動化ライブラリで、Chrome, Firefox, Safari等の異なるブラウザでWebアプリのテストを行うツールです。一般的には、UIテスト、エンドツーエンドテスト、ブラウザ別テストで利用されます。

プロジェクトでの利用状況
E2Eテストで使用しています。"
Postman,Adopt,Tools,FALSE,"PostmanはAPI開発やテストを容易にするツールです。RESTful APIの設計や検証、テストなどを行うことができます。一般的にはデバッガーとして使用され、APIのリクエストとレスポンスを確認し、機能テストやエンドポイントのトラブルシューティングに利用されます。

プロジェクトでの利用状況
APIの実行に使用しています。"
Preact,,,,"PreactはReactと互換性のあるJavaScriptライブラリで、モバイルデバイスや老朽化したブラウザでも高速に動作します。主にウェブのインターフェースを構築する際に使用されます。

Projectでの利用状況
フロントエンドの実装に使用しています"
prettier,Adopt,Tools,FALSE,"prettierは自動的にコードのフォーマットを整えるツールです。JavaScriptを中心に多種多様な言語をサポートしています。ユースケースは、綺麗なコードで保守性を上げる場面や、コーディング規約を統一する場面で使用されます。

プロジェクトでの利用状況
コードの整形に使用しています。"
PrismaCloud,Adopt,Tools,TRUE,"PrismaCloudは、クラウドネイティブアプリケーションのセキュリティおよびコンプライアンスを提供するプラットフォームです。一般的なユースケースには、データの保護、アクセス管理、脆弱性管理などがあります。

プロジェクトでの利用状況
コンテナのセキュリティ検証に使用しています。"
Prott,,,,Prottは、アイデアを形にし、共有、検証するためのプロトタイピングツールです。初期段階のスケッチから、インタラクティブなアプリケーションまで作成可能です。
 Zepplin,,,,Zeppelinはデザインとエンジニアリングの協働を促進するツールです。デザインを直接開発者が実装しやすい形で提供し、生産性を向上させます。
python,Apopt,languages-and-frameworks,FALSE,"Pythonは汎用の高水準言語で、人工知能やウェブ開発、データ分析などの領域で広く利用されます。簡潔な書式と強力なライブラリ類で、コーディングの効率化を実現しています。

プロジェクトでの利用状況
バックエンドや生成AI関係の実装に使用している。"
quasar,Adopt,languages-and-frameworks,FALSE,"QuasarはVue.jsベースの高性能な一元化フレームワークで、シングルページアプリ、SSR、PWA、モバイルアプリ、デスクトップアプリの作成に使用されます。豊富なコンポーネントと機能が特徴です。

プロジェクトでの利用状況
Webアプリのフロントエンド開発で利用しています。"
Rancher Desktop,Adopt,Tools,FALSE,"Rancher Desktopは、Kubernetesの開発やテストを簡易化するデスクトップアプリケーションです。開発者がローカル環境でKubernetesクラスタを簡単にセットアップ、管理できるツールで、開発やテスト、デバッグ作業に一般的に使用されます。

プロジェクトでの利用状況
ローカルでのコンテナ管理に利用しています。"
React,Adopt,languages-and-frameworks,FALSE,"ReactはFacebookが開発したJavaScriptライブラリで、ユーザーインターフェースの構築に用いられます。主にSPAやモバイルアプリケーションの開発に利用されます。

プロジェクトでの利用状況
フロントエンドの実装に使用しています。"
React Native,Adopt,languages-and-frameworks,FALSE,"React Nativeは、JavaScriptとReactを使用してiOSやAndroidのネイティブアプリを作成するためのフレームワークです。一般に、コードの再利用、クロスプラットフォーム開発、高速なアプリ開発に使用されます。

プロジェクトでの利用状況
iOSアプリの実装に使用しています。"
React Native Paper,Adopt,languages-and-frameworks,FALSE,React Native Paperは、マテリアルデザインの原則に従ったReact Nativeの高品質なUIコンポーネントライブラリです。モバイルアプリケーションの開発において、コードの再利用性を高め、開発効率を向上させるために使用されます。
Redis,Apopt,Platforms,FALSE,"Redisは、オープンソースのキーバリューストアで、データ構造が豊富でパフォーマンスも高いのが特徴です。ユースケースとしては、キャッシング、パブ/サブ、セッション管理、リアルタイム分析などがあります。

プロジェクトでの利用状況
オンメモリDBとして利用しています。"
Redux,Hold,languages-and-frameworks,FALSE,"ReduxはJavaScriptアプリの状態管理を助けるライブラリです。一般的に、Reactと一緒に使われてコンポーネント間でデータを一貫性良く共有・制御するのに使用されます。

プロジェクトでの利用状況
フロントエンドのステート管理に利用していました。目的に対して重過ぎて開発の負担になっていました。
より軽量なステート管理に移行したプロジェクトもあります。（RecoilやZustandなど）"
renovate,Trial,Platforms,TRUE,Renovateは依存関係の自動更新を行うツールで、プロジェクトの依存ライブラリを最新に保つ自動化を可能にします。一般的には、セキュリティ更新や新機能の自動適用といったユースケースで使用されます。
Riverpod,Adopt,languages-and-frameworks,TRUE,"Riverpodは、Flutterの状態管理ライブラリで、コードの組織化とテスト性を高める目的で設計されました。一般的には、大規模Flutterアプリケーションの状態管理や依存性注入に使用されます。

プロジェクトでの利用状況
Flutter製アプリの状態管理ライブラリとして使用している。簡単な記述で状態を管理（Widget間で共有）できる、テスト時に状態を上書きできるようになっているのでテスト容易性も確保できるなどの利点がある。"
RubyMine,,Tools,FALSE,RubyMineはRubyおよびRuby on Railsの統合開発環境（IDE）で、細やかなコード管理、高速なナビゲーション、スマートな自動補完等を提供します。RubyやRails、JavaScriptなどの開発やテスト、デバッグ、コード解析に普通に使用されます。
Scrum,Adopt,Techniques,FALSE,"Scrumはアジャイル開発のフレームワークで、開発作業を一定期間ごとのスプリントに分割し、定期的な改善と反復を行います。一般的にはソフトウェア開発プロジェクト管理に利用されます。

プロジェクトでの利用状況
開発フローとして採用しているプロジェクトが多いです。"
scss,Adopt,languages-and-frameworks,TRUE,"SCSSはCSSの拡張で、ネスト、変数、ミックスインなどの機能を備え、効率的なスタイルシートの作成を可能にします。ウェブページやアプリのスタイル定義に一般的に使用されます。

プロジェクトでの利用状況
CSSの実装に使用しています。"
SendGrid,Adopt,Platforms,FALSE,"SendGridはクラウドベースのメール配信サービスで、スパムフィルター回避を可能にし続けながら大量のメールを効果的に配信します。一般的にはマーケティングキャンペーンや自動通知、トランザクションメール送信に使用されます。

プロジェクトでの利用状況
Webアプリでのメール機能に使用しています。"
Serverless Framework,Assess,languages-and-frameworks,FALSE,Serverless Frameworkは、Serverlessアーキテクチャの構築・デプロイを助けるツールです。主要なクラウドプロバイダーのFaaS(Functions as a Service)に対応。一般的に、コード実行に必要なリソースの管理を省き、開発者がビジネスロジックに集中できるようにするために使われます。
Service Now API,,Platforms,TRUE,"Service Now APIは、サービスマネージメントソフトウェアServiceNowの各機能に対するプログラム的なインターフェースを提供するツールです。アプリケーションとServiceNow間のデータ共有や、自動化フローの開発等に一般的に使用されます。

プロジェクトでの利用状況
外部連携のために使用しています。"
shell,Adopt,languages-and-frameworks,FALSE,"シェルは、ユーザーとコンピュータのOS間でコマンドを伝達するインターフェースです。ユースケースとしては、ファイル管理、プログラムの実行、タスクの自動化などが挙げられます。

プロジェクトでの利用状況
転送データハブアプリケーションに利用しています。"
Slack,Adopt,Tools,TRUE,"Slackはビジネスコミュニケーションツールで、リアルタイムメッセージング、ファイル共有、通知などの機能があります。一般的には、プロジェクトチーム間のコミュニケーションや共同作業の統合管理に使用されます。

プロジェクトでの利用状況
コミュニケーションツールとして多くのプロジェクトで採用しています。"
Snowpack,Hold,,,"Snowpackは、現代的なWeb開発を目指すフロントエンドビルドツールです。開発時間を大幅に短縮するための即時起動と変更のインスタントリビルドが特徴です。一般的には、ReactやVueなどのモダンなフレームワークの開発とビルドに使われます。

プロジェクトでの利用状況
Vite の登場前のビルドツールです。現在では積極的にはメンテナンスされていないため新規プロジェクトでの利用はお勧めしません。代わりにViteを利用することを検討するのがよいです。"
SonarQube,Adopt,Tools,FALSE,"SonarQubeは、静的コード分析ツールで、コードの品質を維持・向上させるためのものです。バグやコードのスメル、セキュリティの欠陥などを検出し、改善提案を行います。一般的には、コードレビューや持続的インテグレーションの一環として使用されます。

プロジェクトでの利用状況
CIでコンテナのセキュリティ検証のために使用しています。"
Spring Boot,Adopt,languages-and-frameworks,FALSE,"Spring Bootは、Springフレームワークをベースに比較的簡単にJavaアプリケーションを開発・実行することを可能にするツールです。ユースケースは、企業レベルのWeb、API、マイクロサービス開発。

プロジェクトでの利用状況
Webアプリのバックエンド、転送データハブアプリケーションで使用しています。"
SQL,,,,SQLは、データベースの管理や操作を行うためのプログラマ向け言語です。データのクエリ、更新、挿入、削除などの操作を行うときに一般的に使用されます。
SQLServer,Adopt,Platforms,FALSE,SQLServerはMicrosoftが提供するリレーショナルデータベース管理システム（RDBMS）です。データの保存、更新、検索などを高速に行うことができます。ユースケースとしては、企業の業務データの管理、ユーザ情報の保存、レポートの生成などがあります。
SQLServer Manegement Studio,Adopt,Tools,FALSE,"SQLServer Management Studioは、SQL Server、Azure SQL Database、Azure SQL Data Warehouseのデータベースを管理し、開発するための統合環境ツールです。データベース設計、クエリ編集、データベースのパフォーマンス監視などが可能で、開発者やDB管理者に広く使用されます。

プロジェクトでの利用状況
ローカルDBでの動作環境、Azure上に構築されているDBのデータ操作に使用しています。"
Stoplight Studio,Adopt,,TRUE,"Stoplight StudioはAPI設計およびドキュメンテーションツールで、OpenAPIおよびJSONスキーマ仕様を視覚的に編集する機能があります。一般的にはAPIの開発と共有、ドキュメンテーションの作成に使用されます。

プロジェクトでの利用状況
OpenAPI定義の作成に使用しています。"
Storybook,,,,"Storybookは、ユーザーインターフェースコンポーネントを独立して開発・テストできるツールです。ユースケースとしては、デザイナーや開発者がコンポーネントの外観、感触、動作を視覚的に探索・テストすることができます。

プロジェクトでの利用状況
Reactコンポーネントの管理に利用しています。"
Swagger,Adopt,languages-and-frameworks,FALSE,"SwaggerはAPIの開発、設計、構築、テストを容易にするオープンソースのフレームワークです。APIの仕様を視覚化し、ドキュメンテーションを自動生成します。主にRESTful API開発で使用されます。

プロジェクトでの利用状況
API設計に利用しています。"
SWC,Adopt,languages-and-frameworks,TRUE,"SWC (Swift Compiler Collection)は、JavaScriptとそのTypeScriptというJavaScriptのダイアレクトに対する強力で速いコンパイラです。一般的には、ウェブアプリの開発やパフォーマンスの向上に使用されます。

プロジェクトでの利用状況
JestでTypeScriptのコンパイル速度が遅いため利用し始めました。現在は ts-jest の内部が SWC になったので ts-jest を利用しています。"
msw,Adopt,languages-and-frameworks,FALSE,"Mock Service WorkerはAPIモッキング・ライブラリで、クライアントに依存しないモックを書くことができ、あらゆるフレームワーク、ツール、環境で再利用することができます。

プロジェクトでの利用状況
サーバモックとしてJestと組み合わせて利用しています。"
Teams,Trial,Tools,FALSE,"Teamsは、Microsoftが提供するビジネス向けのコミュニケーションプラットフォーム。一般的には、会議のスケジュール管理、ビデオ・音声通信、共同作業、ファイル共有など、リモートでのチームワークを効率的に行うために使用されます。

プロジェクトでの利用状況
顧客とのコミニュケーション、ファイル共有で利用しています。"
terraform,Adopt,languages-and-frameworks,FALSE,"Terraformはハッシュコープが開発したオープンソースのインフラストラクチャー管理ツール。コードによるインフラ構成を定義・提供するためのソフトウェアです。一般的には、クラウドリソースの作成、変更、バージョン管理が主なユースケースです。

プロジェクトでの利用状況
AWS/GCP構成管理で利用しています。"
Trusteer,Adopt,Platforms,TRUE,"TrusteerはIBMのセキュリティソフトウェアで、特に金融サービス業界で利用されます。不正アクセスやマルウェアからの攻撃を防止し、セキュアなトランザクションを可能にします。

プロジェクトでの利用状況
マルウェア・不正取引検知サービスとして利用しています。"
tsyringe,Adopt,languages-and-frameworks,TRUE,"tsyringeはTypeScript向けの軽量でフレームワーク非依存の依存性注入コンテナです。コードのモジュラリティと再利用性を高め、アプリケーション内の関連性の高い部品を結びつけるのに役立ちます。

プロジェクトでの利用状況
TypeScriptのDIコンテナフレームワークとして利用しています。"
Twillio,Adopt,Platforms,TRUE,"Twillioはクラウド通信のプラットフォームで、APIを通じてテキストメッセージの送受信、通話、ビデオチャットなどの機能をアプリケーションに組み込むことができます。一般的には、カスタマーサービスの自動化、2要素認証、リアルタイム通信などに使用されます。

プロジェクトでの利用状況
音声通知サービスで利用しています。"
typecheck,Adopt,Tools,FALSE,"Typecheckはコードの静的解析を行うツールで、コード実行前に引数や戻り値の型が期待通りか検証します。主にPythonやJavaScriptで使用され、バグの早期発見やコード品質の向上に寄与します。

プロジェクトでの利用状況
TypeScriptのリンターとして利用しています。"
TypeORM,Adopt,languages-and-frameworks,FALSE,"TypeORMはJavaScript、TypeScript、NodeJSの高度なオブジェクト関連型マッピング（ORM）ライブラリで、データベースとの対話を抽象化します。ユースケースは、複雑なデータベース操作を効率的に管理・実行するために使用されます。

プロジェクトでの利用状況
TypeScriptのO/Rマッパーとして利用しています。DBのマイグレーション機能も利用しています。"
TypeScript,Adopt,languages-and-frameworks,FALSE,"TypeScriptはJavaScriptのスーパーセットで、静的型付けやクラスベースのオブジェクト指向プログラミングなどの機能を提供します。大規模なプロジェクトでのエラー検出やコード管理に一般的に用いられます。

プロジェクトでの利用状況
フロントエンド, バックエンド(AWS Lambda, NestJSなど), IaC(AWS CDK)など様々なプロジェクトの様々な箇所で利用しています。
単一の言語でほとんどの実装ができるので利用するプロジェクトは多いです。"
typescript-json-schema / json-schema-faker,Adopt,languages-and-frameworks,TRUE,"typescript-json-schema：TypeScriptの型情報を元にJSONスキーマを生成するライブラリ。APIのレスポンス型などをドキュメンテーションしたり型検証に使用される。

json-schema-faker：JSONスキーマに基づいてランダムなデータを生成するライブラリ。テストデータの生成やAPIモックの作成時に使用される。

プロジェクトでの利用状況
TypeScript の型情報からJSONスキーマを生成し、JSONスキーマからJestで利用するランダムなテストデータを生成して利用しています。"
Velocity Template,Hold,languages-and-frameworks,FALSE,"Velocity Templateは、Javaのためのテンプレートエンジンです。ウェブサイトやメールなどの動的コンテンツ生成に使用されます。テキスト生成にデータを簡単に組み込むことができます。

プロジェクトでの利用状況
AppSyncのリゾルバーマッピングテンプレートで使用しています。JavaScriptで記述できるようになったので、VTLで実装する制約がない場合はJavaScriptで実装することをお勧めします。"
Verdaccio,Hold,Tools,TRUE,"Verdaccioは、プライベートnpmレジストリサーバで、専用のパッケージを管理・配布するために使われます。パブリックnpmと互換性があり、高速なキャッシングとオフラインモードを提供します。

プロジェクトでの利用状況
GHE Packages リリース前に AWS ECR をバックボーンにしたプライベート npm レジストリで利用していました。"
VertexAI,Assess,Platforms,TRUE,"VertexAIは、Google Cloudの統合型MLプラットフォームで、データサイエンティストがモデルの開発からデプロイまでの各フェーズを管理できます。一般的には、予測分析やパターン識別など機械学習プロジェクトに使用されます。

プロジェクトでの利用状況
顧客の様々な業務の中でAIを活用することで効率化が図れるか検証を行っています。"
Visual Studio,Adopt,Tools,FALSE,"Visual Studioは、Microsoftが開発した統合開発環境（IDE）です。どんな言語にも対応しており、デバッガー、コードエディター、UIデザイナーなどのツールを提供し、ソフトウェア開発作業を効率化します。一般的には、WindowsやWebアプリケーションの開発に使用されます。

プロジェクトでの利用状況
バックエンド開発に使用しています。
VSCodeよりも重いため人気はないが、テスト管理など一部の機能はこちらでしか利用できない。"
Visual Studio Code,Adopt,Tools,FALSE,"Visual Studio CodeはMicrosoftが開発したソースコードエディタ。様々なプログラミング言語に対応し、シンタックスハイライト、インテリセンス、デバッグなどの開発機能を提供。一般的にはWebやアプリケーション開発者に利用される。
VSCodeはMicrosoftが開発した無料のコードエディタで、軽量でありながら多機能。拡張機能により多くの言語やツールに対応。主にプログラムの記述、テスト、デバッグ等に使用される。

プロジェクトでの利用状況
TypeScript, Python, Flutter, C#など様々な言語やプラットフォーム向けの拡張機能を追加して多くのプロジェクトで利用しています。
最も多く採用されているエディタです。"
Visual Studio LiveShare,Adopt,Tools,TRUE,"Visual Studio LiveShareは、リアルタイムのコード共有・コード協調のためのツールです。一般的に、2人以上の開発者が同じコードベースで作業する、またはコードレビューやデバッグセッションを共同で行う場合などに用いられます。
VSCode Live Shareは、共同開発を可能にするVSCode拡張機能です。異なる環境にいる開発者が同時に同じコードベースにアクセスし、リアルタイムのコラボレーションやデバッグを行うことができます。ユースケースとしては、ペアプログラミングやコードレビューが一般的です。

プロジェクトでの利用状況
リモートでペアプロ、モブプロを行う際に利用しています。Webアプリではホスト側で起動した開発サーバにゲストもアクセスして開発しています。
モバイルアプリの開発ではWebアプリのようにポートを公開してホスト側で実行しているサーバにゲスト側からアクセスすることようなことができないのでアプリの操作はホストとなった開発者のみが行うことで対応しています。
また、議事録をリアルタイムに共同編集するような利用もしています。"
Vite,Adopt,languages-and-frameworks,FALSE,"Viteは、Vue.jsクリエーターによって開発された現代のフロントエンドビルドツールです。開発体験の改善を目指し、高速なホットリロードと真のソースマップを提供します。一般的には、Vue.js、React、Preact等のフロントエンドフレームワークの開発時に使用します。

プロジェクトでの利用状況
Webアプリのフロントエンドのビルドツールとして利用しています。"
vitest,Adopt,languages-and-frameworks,TRUE,"Vitestは、Viteプロジェクト用の新しいテストランナーです。フレームワーク非依存で、手動テスト、ユニットテスト、E2Eテストをサポートしています。よくViteプロジェクトのテストに使用されます。

プロジェクトでの利用状況
Vueを利用したフロントエンドの単体テストで使用しています。"
Vue,Adopt,languages-and-frameworks,FALSE,"VueはJavaScriptフレームワークで、状態管理やルーティングのための公式サポートがあります。一般的には、シングルページアプリケーション(SPA)の開発において、コンポーネントベースの開発を行う際に使用されます。

Webアプリのフロントエンドのフレームワークとして利用しています。"
Vue Router,Adopt,languages-and-frameworks,FALSE,"Vue Routerは、Vue.jsのための公式なルーティングライブラリで、シングルページアプリケーションのルーティングを管理するのに使われます。URLの変更によって異なるビューを表示したり、ネストされたルートやモーダルウィンドウなどの複雑なルーティングシナリオを扱うことができます。

プロジェクトでの利用状況
Vueを利用したフロントエンドの画面遷移で使用しています。"
Vue Test Utils,Adopt,Tools,FALSE,"Vue Test Utilsは、Vue.jsの公式のテストユーティリティーライブラリです。Vue.jsコンポーネントのユニットテストを作成・実行することを助けます。テスト中にコンポーネントの状態を検証したり、ユーザーのインタラクションをシミュレートしたりできます。

プロジェクトでの利用状況
Vueを利用したフロントエンドのテストで利用しています。"
Vuetify,Adopt,languages-and-frameworks,FALSE,"VuetifyはVue.jsの上に構築されたマテリアルデザインフレームワークで、開発者がすばやく美しいUIを作成できます。一般的には、シングルページアプリケーションやプログレッシブウェブアプリ開発に使われます。

プロジェクトでの利用状況
フロントエンドCSSフレームワーク"
Vuex,Adopt,languages-and-frameworks,FALSE,"VuexはVue.jsの状態管理ライブラリで、アプリケーションの全てのコンポーネントの状態を一元管理します。一般的に、大規模なSPA（Single-Page Application）でのデータ管理によく使用されます。

プロジェクトでの利用状況
Vue2を利用したアプリの状態管理に利用しています。"
WEBCAS e-mail,Adopt,Platforms,TRUE,"WebCasは独自のWeb開発フレームワークで、開発者が独自のWebサイトやアプリケーションを構築するためのツールとライブラリを提供しています。一般的なユースケースは、ビジネスのWebサイト開発やEコマースサイトの作成などです。

プロジェクトでの利用状況
メール通知サービスとして利用しています。"
webpack,Adopt,Tools,FALSE,"webpackはJavaScriptのモジュールバンドラで、依存関係を持つモジュール群をひとつのファイルにまとめます。リソースの最適化、変換、Webサイトのパフォーマンス向上などが主なユースケースです。
WebpackはJavaScriptのモジュールバンドラーで、必要なリソースを1つのファイルに結合します。一般的には、プロジェクトのビルドや開発を効率化するために使われます。

プロジェクトでの利用状況
フロントアプリのビルドツール、Serverless Framework の Lambda + TypeScript デプロイパッケージングに利用しています。"
WindowsServer,Adopt,Platforms,FALSE,"WindowsServerは、マイクロソフトが提供するOSで、企業のデータ管理や運用をサポートします。一般的には、ファイルサーバーやWebサーバー、データベースサーバーなどとして使用されます。

プロジェクトでの利用状況
WebアプリのサーバーOSとして利用してます。"
WorkspaceONE,Trial,Platforms,TRUE,"WorkspaceONEはVMwareの統合デジタルワークスペースプラットフォームで、モバイルとデスクトップのエンドユーザーにシームレスな経験を提供します。ユースケースは、リモートワークのモバイルデバイス管理やセキュリティ対策です。

プロジェクトでの利用状況
開発端末の管理・制御に利用しています。"
xUnit,Adopt,languages-and-frameworks,TRUE,"xUnitはユニットテストフレームワークの一種で、テスト駆動開発を支えるツールの一つです。記事や機能の中の個別のコンポーネントが正しく動作するかを確認するために、一般的に微小なテストケースを作成・実行するために用います。

プロジェクトでの利用状況
バックエンドの単体テストで使用"
yarn,Apopt,Tools,FALSE,"YarnはJavaScriptのパッケージマネージャで、依存関係の管理と効率的なパッケージインストールの実行を可能にします。一般的には、Web開発プロジェクトでのパッケージ管理と依存関係解決に使用されます。

プロジェクトでの利用状況
パッケージマネージャとして利用しています。"
Zoom,Adopt,Tools,FALSE,"Zoomは、ビデオ通話、オンライン会議、チャットとウェビナーを可能にするプラットフォームです。遠隔地からのコラボレーション、仮想イベントの開催、リモート教育など、多様なユースケースに対応します。

プロジェクトでの利用状況
常時接続して開発時のコミュニケーションの手段として利用しています。
朝会などで利用してるチームではSlackを利用しているチームではハドルリリース後はハドルを利用しているチームもあります。"
オフライン実行環境,Adopt,Techniques,FALSE,"オフライン実行環境は、インターネット接続せずにプログラム・アプリケーションを実行できる環境です。一般的なユースケースとしては、情報のセキュリティが必要な開発や、ネットワーク接続が不安定な場所での作業などがあります。

プロジェクトでの利用状況
APIサーバをServerless Frameworkのプラグインを利用してローカル実行し、さらにAPIサーバのバックエンドもモックを用意することで、モバイルアプリをシミュレータ／エミュレータで動作確認するために利用しています。動作確認が容易になります。"
サーバーサイドコード構成,Adopt,Techniques,,"サーバーサイドコード構成は、サーバー上で動作するソフトウェアの設定や機能を範囲内で設定するプロセスです。一般的には、データベースの接続、認証、ルーティングなどの設定が含まれます。これにより、記憶域やセキュリティなどの管理が可能になります。

プロジェクトでの利用状況
クリーンアーキテクチャに沿った Request -> UseCase -> Repository -> Response の流れで、依存違反が発生しないように相対パスインポートチェックなどは eslint で確認しています。"
サーバーレスアーキテクチャ,Apopt,Techniques,,"サーバーレスアーキテクチャは、サーバの管理をクラウドプロバイダが担当し、開発者はコードの実行にのみ集中できる設計パターンです。イベント駆動なAPI、イベントチェーニング、リアルタイムファイル処理などによく使用されます。

プロジェクトでの利用状況
いくつかのチームではサーバー管理なく、サーバーレスアーキテクチャで構成されています。"
システム監視,Apopt,Techniques,,"システム監視は、システムのパフォーマンスや稼働状況をリアルタイムで観察・管理するためのツールやプロセス。ダウンタイムの予防、問題の早期発見・解消、パフォーマンス最適化などに用いられます。

プロジェクトでの利用状況
DataDogのダッシュボードを使って朝会でシステム状況を共有、アラートはSlackのチャンネルにも通知されるようにしています。"
セキュリティ,Apopt,Techniques,,"セキュリティは情報やシステムを不正アクセス、窃盗、損傷から保護するためのプロセスや手段。ソフトウェア開発では、セキュアなコードの作成や、セキュリティの脆弱性の検出・修正などに使われます。

プロジェクトでの利用状況
GHE の dependabot でセキュリティ警告やライブラリアップデートを実施しています。月-金早朝に実行してCombine PRでまとめてマージします。
Node.js のLTSに関しては、サポートが終了する前に開発チームのバックログアイテムとして起票して対応します。
チーム内では月1回 アップデートがないか確認するSlack Bot があります。"
チームのやり方,Apopt,Techniques,,"チームのやり方は、チームが開発作業をどのように実行すべきかを定義した一連の手法やプロセスです。一般に、タスクの割り当て、コードのレビュー、コミュニケーションなど、開発作業の各段階を指導しています。

プロジェクトでの利用状況
Scrumを採用しています。"
ドキュメント,Apopt,Techniques,,"ドキュメントは情報を記録・伝達するためのツールです。開発者がソフトウェアやシステムの仕様、使用方法、調査結果を整理、共有する際に用いられます。ユースケースとしては、APIの説明、ソフトウェアアーキテクチャの説明、教育資料の作成などがあります。

プロジェクトでの利用状況
リポジトリに関するものはREADME, CHANGELOG、それ以外は Confluence に記述しています。"
ブランチ戦略/リリースフロー,Apopt,Techniques,,"ブランチ戦略/リリースフローは、開発プロセスの一部で、新しい機能や修正を別々に開発し、テスト後に本番ブランチに統合する手法です。一般的には、複数の開発者が同時に作業し、コードの安定性を保つために使用されます。

プロジェクトでの利用状況
git-flow を採用しています。フローに沿ったタイミングで GHE Actions で自動的にテストおよびデプロイが実行されるようにしています。"
モックサーバ,Apopt,Techniques,TRUE,"モックサーバは開発の過程で使用される仮のサーバで、通常は本番サーバと同じレスポンスを返す。APIのテストやフロントエンドの開発時に仮のバックエンドとして使用されます。

プロジェクトでの利用状況
AWS上の開発環境APIサーバの連携先をLambdaでモックしています。"
モデルを使った設計,Access,Techniques,FALSE,"モデルを使った設計は、プロジェクトの初期段階でコードの代わりにコンピュータモデルを作成するプロセスです。このモデルは、アイディアの視覚化と理解、設計の分析と検証、最終的にはコードの生成に役立ちます。

プロジェクトでの利用状況
チーム内の設計情報作成と共有のために利用しています。
アジャイル開発でも必要な設計品質を担保するため、低コストな設計の共有方法としてして試行中です。"
依存ライブラリの更新,Adopt,Techniques,FALSE,"ライブラリの更新は、使用しているライブラリの新しいバージョンをプロジェクトに適用するプロセスです。この目的は、機能改善、セキュリティ修正、パフォーマンス向上等の最新機能を取得することです。一般的には、バグ修正、新機能の追加、セキュリティ問題の修正のために行われます。

プロジェクトでの利用状況

あるプロジェクトでは依存しているライブラリなどの更新のチェックはスプリント毎（1週間スプリント）に実施しています。
同じチームの別プロジェクト（前のプロジェクト）で1か月毎にライブラリの更新作業をしていましたが、一度に更新されるライブラリの量が多くなってしまいライブラリの更新によるコード変更が多く発生したり、更新されるライブラリ同士の依存関係を紐解くのに時間がかかったり（特にビルドが通らない、テストが通らないなどになると余計に時間がかかる）したので、1か月では更新頻度が足りないと判断して1週間毎に実施しています。スプリント毎に実施することでそれらの問題が解消されてうまく回っています。
スプリント毎にJiraにライブラリ更新のチケットを作成してライブラリ更新の作業を行っています。ライブラリ更新のチェックにはrenovateを使っています。

当初はDependabotを利用していたが途中でrenovateに変更。個人的にはdependabotの方が使い勝手がよかったように思う。

別プロジェクトでもライブラリ更新チェックにrenovateを使っています。
このプロジェクトではチェックは1ヶ月に1回の頻度で行い、パッチのupdateはCIが通っていればマージOK、マイナーバージョンは内容確認し、CIと動作確認がとれればマージOK、メジャーバージョンは基本取り込まない（別のタイミングで対応する）として運用しています。プロジェクトの全てのリポジトリでrenovateでのライブライブ更新を採用はできてはいないです。"